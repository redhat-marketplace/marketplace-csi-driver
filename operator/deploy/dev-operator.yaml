apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: openshift-operators  
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: openshift-redhat-marketplace
---  
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplacecsidrivers.marketplace.redhat.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type == "Install")].status
    name: INSTALL_STATUS
    type: string
  - JSONPath: .status.conditions[?(@.type == "DriverStatus")].status
    name: DRIVER_STATUS
    type: string
  group: marketplace.redhat.com
  names:
    kind: MarketplaceCSIDriver
    listKind: MarketplaceCSIDriverList
    plural: marketplacecsidrivers
    singular: marketplacecsidriver
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MarketplaceCSIDriver is the resource that deploys the marketplace CSI driver
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MarketplaceCSIDriverSpec defines the desired state of MarketplaceCSIDriver
          properties:
            credential:
              description: Credential is configuration that contains dataset S3 credential details
              properties:
                name:
                  description: Name for the kubernetes Secret with S3 credentials.
                  type: string
                type:
                  description: Type of Secret. Supported types are hmac or rhm-pull-secret (default).
                  enum:
                  - hmac
                  - rhm-pull-secret
                  - rhm-pull-secret-hmac
                  type: string
              required:
              - name
              - type
              type: object
            endpoint:
              description: Endpoint is the dataset S3 public endpoint
              type: string
            healthCheckIntervalInMinutes:
              description: HealthCheckIntervalInMinutes is the interval at which to run health check for mounted volumes. A value of `0` disables periodic health check.
              format: int32
              minimum: 0
              type: integer
            mountOptions:
              description: MountOptions is an array of performance options for dataset driver. This is for internal use.
              items:
                type: string
              type: array
            mountRootPath:
              description: MountRootPath is the root mount path for all dataset buckets
              type: string
          required:
          - credential
          - endpoint
          - healthCheckIntervalInMinutes
          - mountRootPath
          type: object
        status:
          description: MarketplaceCSIDriverStatus defines the observed state of MarketplaceCSIDriver
          properties:
            conditions:
              description: Conditions represent the latest available observations of the driver state
              items:
                description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            driverPods:
              additionalProperties:
                description: DriverPod defines identifiers for a csi driver pod
                properties:
                  createTime:
                    description: CreateTime is the pod creation time
                    type: string
                  nodeName:
                    description: NodeName is the node where a driver pod is running
                    type: string
                  version:
                    description: Version is the resource version of a driver pod
                    type: string
                type: object
              description: DriverPods holds details of currently running csi driver pods
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplacedatasets.marketplace.redhat.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type == "Install")].status
    name: INSTALL_STATUS
    type: string
  - JSONPath: .status.conditions[?(@.type == "CleanUpStatus")].status
    name: CLEANUP_STATUS
    type: string
  group: marketplace.redhat.com
  names:
    kind: MarketplaceDataset
    listKind: MarketplaceDatasetList
    plural: marketplacedatasets
    singular: marketplacedataset
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MarketplaceDataset is the resource identifying a purchased dataset from Red Hat Marketplace
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MarketplaceDatasetSpec represents a dataset subscription in Red Hat Marketplace
          properties:
            bucket:
              description: Bucket is the dataset bucket name
              type: string
            podSelectors:
              description: PodSelectors is a a list of rules to select pods for this dataset based on pod labels. In addition to labels, rules also support fields `metadata.name` and `metadata.generateName` If one of the pod selector rules is satisfied by a pod, this dataset will be mounted to that pod.
              items:
                description: Selector defines one set of pod targeting terms for this dataset. All conditions in `match label` and `match expressions` must be satisfied for a pod to be selected.
                properties:
                  matchExpressions:
                    description: MatchExpressions is a set of expressions used to target pods for this dataset. Supported operators are In, NotIn, Exists and DoesNotExist
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels is a set of label value pairs used to target pods for this dataset
                    type: object
                type: object
              type: array
          required:
          - bucket
          type: object
        status:
          description: MarketplaceDatasetStatus defines the observed state of MarketplaceDataset
          properties:
            conditions:
              description: Conditions represent the latest available observations of dataset state
              items:
                description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplacedriverhealthchecks.marketplace.redhat.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type == "ConditionTypeHealthCheck")].status
    name: HEALTH_CHECK_STATUS
    type: string
  group: marketplace.redhat.com
  names:
    kind: MarketplaceDriverHealthCheck
    listKind: MarketplaceDriverHealthCheckList
    plural: marketplacedriverhealthchecks
    singular: marketplacedriverhealthcheck
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MarketplaceDriverHealthCheck is used by the Operator to trigger mounted volume check and repair
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MarketplaceDriverHealthCheckSpec is used by Operator to trigger mounted volume check and repair
          properties:
            affectedNodes:
              description: AffectedNodes is list of nodes to check and repair
              items:
                type: string
              type: array
            dataset:
              description: Dataset is an optional input that can used to limit health check to a given dataset in the namespace of this custom resource
              type: string
          type: object
        status:
          description: MarketplaceDriverHealthCheckStatus defines the observed state of MarketplaceDriverHealthCheck
          properties:
            conditions:
              description: Conditions represent the latest available observations of the health check state
              items:
                description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            driverHealthCheckStatus:
              additionalProperties:
                description: HealthCheckStatus defines health check responses for each node
                properties:
                  driverResponse:
                    description: DriverResponse is the response from CSI driver, possible values are NoAction, NoEligiblePods, Repaired or Error
                    type: string
                  message:
                    description: Message is optional message associated with action taken on the node
                    type: string
                  podCount:
                    description: PodCount is the number of pods that were checked for repair
                    format: int32
                    type: integer
                type: object
              description: DriverHealthCheckStatus is driver health check status for each node, map key is the node name
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-leader-election-role
  namespace: openshift-operators
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-manager-role
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - statefulsets
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - infrastructures
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - namespaces
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplacecsidrivers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplacecsidrivers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplacedatasets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplacedatasets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplacedriverhealthchecks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marketplace.redhat.com
  resources:
  - marketplacedriverhealthchecks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - storage.k8s.io
  resources:
  - csidrivers
  - storageclasses
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-leader-election-rolebinding
  namespace: openshift-operators
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: marketplace-dataset-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-operators
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: marketplace-dataset-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-operators
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: marketplace-dataset-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-operators
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-controller-manager-metrics-service
  namespace: openshift-operators
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-webhook-service
  namespace: openshift-operators
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-controller-manager
  namespace: openshift-operators
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  template:
    metadata:
      labels:
        control-plane: controller-manager
        redhat.marketplace.com/name: redhat-marketplace-dataset-operator
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        env:
        - name: POD_NAME
          value: redhat-marketplace-dataset-operator
        image: quay.io/rh-marketplace/marketplace-dataset-operator:1.0.3
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.7.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-serving-cert
  namespace: openshift-operators
spec:
  dnsNames:
  - marketplace-dataset-webhook-service.openshift-operators.svc
  - marketplace-dataset-webhook-service.openshift-operators.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: marketplace-dataset-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-selfsigned-issuer
  namespace: openshift-operators
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: openshift-operators/marketplace-dataset-serving-cert
  labels:
    redhat.marketplace.com/name: redhat-marketplace-dataset-operator
  name: marketplace-dataset-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: marketplace-dataset-webhook-service
      namespace: openshift-operators
      path: /rhm-csi-mutate-v1-pod
  failurePolicy: Ignore
  name: webhook.csi.rhm
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
