// Code generated for package assets by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/csi-controller-service.yaml
// assets/csi-driver-env.yaml
// assets/csi-driver.yaml
// assets/csi-node-service.yaml
// assets/csi-reconciler.yaml
// assets/csi-service.yaml
// assets/csi-unit-test-2.yaml
// assets/csi-unit-test.yaml
// assets/csi-webhook.yaml
// assets/dataset-pvc.yaml
// assets/rbac-csi-cluster-role-binding.yaml
// assets/rbac-csi-cluster-role.yaml
// assets/rbac-csi-role-binding.yaml
// assets/rbac-csi-role.yaml
// assets/rbac-olm-dataset-cluster-role-binding.yaml
// assets/rbac-olm-dataset-cluster-role.yaml
// assets/rbac-olm-leader-role-binding.yaml
// assets/rbac-olm-leader-role.yaml
// assets/rbac-service-account.yaml
// assets/storage-class.yaml
package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCsiControllerServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xdf\x8b\xe3\x36\x10\x7e\xdf\xbf\x42\x98\x7d\xb8\x3e\xd8\xee\xc1\x95\x82\x60\x1f\xd2\x8b\x5b\x42\x9b\x5c\x88\xe9\x42\x29\x65\x99\x95\x27\xc9\x70\xb2\x24\xa4\xb1\x9b\xb0\xec\xff\x5e\x64\xe7\x87\x7d\xc9\xb5\x61\x0b\x7d\xaa\x5e\x12\xc6\x33\x9f\xe6\x9b\xf9\x66\xf4\x99\x4c\x25\x45\xc9\xc0\xb8\x6e\x74\x89\x7c\x07\x8e\x1e\xd1\x07\xb2\x46\x0a\x70\x2e\xe4\xed\xfb\xbb\x1a\x19\x2a\x60\x90\x77\x42\x18\xa8\x51\x0a\x15\x28\xf5\xdb\x3a\x55\x36\xa4\x21\x1c\xcc\xc1\x81\x42\x29\xee\x5f\x16\x93\x79\x51\x2e\x27\x1f\x8b\xd7\xbb\xe0\x50\xc5\xb0\x80\xbe\x25\x85\x8b\xeb\xd1\x1e\x9d\x26\x05\x41\x8a\xf7\x9d\xaf\x46\xc5\xd6\xc7\x38\x21\x6a\x60\xb5\xfd\x05\x9e\x51\x87\xde\x20\x62\x5e\x57\x40\x18\x6b\xa7\x81\xf1\x10\x36\xc8\x39\x1e\x3d\x42\xf8\x1a\x46\x7f\x12\x15\x28\xf3\xdb\x3a\x53\x36\x64\xf4\x1c\x7f\xeb\xbc\xf2\xd4\xa2\x3f\xd4\x26\x91\x22\xb9\x7f\x99\xae\x66\x8f\xc5\xea\xe9\xb1\x58\x95\xb3\x4f\x8b\xd7\xa4\x03\x38\x32\xee\xfe\xf7\xac\x27\x4a\xd9\xc6\xf0\xe8\xbe\x83\x87\xf3\x64\x3d\xf1\xfe\xa3\x86\x10\xfa\xea\x84\x7d\x60\xac\x53\x63\x2b\x4c\x95\x27\x26\x05\xfa\xe0\xad\xac\x61\x20\x83\xfe\x44\x24\x1d\x34\x04\x98\x41\x6d\xd1\x9f\x78\x50\x0d\x1b\x94\xc2\xe3\x86\x02\xfb\x7d\xe6\xb1\xda\x02\x67\x64\x73\xeb\xd0\x84\x2d\xad\xf9\x43\x6e\x03\xa6\x31\x1a\x77\x8c\xde\x80\x3e\xc1\xc8\xf6\x43\xf6\x7d\xf6\xed\xb9\x62\x7e\x33\xa8\x5f\x2a\x92\xb4\x8b\x83\xaa\xf2\x18\xc2\xc3\xfd\xbb\xc9\x74\xba\x2a\xca\xf2\x9b\x64\xec\xd4\x3e\x7c\x77\xb6\xa0\x69\x87\x18\x7d\xf2\x87\xc0\x93\x5d\x88\x16\x74\x83\x52\xe4\x2d\xf8\x5c\xd3\x73\xae\x02\xe5\xc1\xaa\xcf\xc8\x21\x77\xba\xd9\x90\x71\xde\xee\xf6\xd1\x9e\x45\xfb\x98\xf2\xb2\xd1\x7a\x69\x35\xa9\xbd\x14\xb3\xf5\xc2\xf2\xd2\x63\x40\xc3\x27\xaf\xd6\xea\xa6\xc6\x79\x6c\x4a\xb8\x4c\xa7\xbf\x28\xad\xc8\x0f\x32\xaa\xa3\xf3\x12\x78\x7b\x43\x56\x57\x7a\xe3\xbc\x6d\x29\x2a\xe7\x5f\xb7\x67\x80\x74\x43\x87\x70\xc7\x1e\x52\xe5\x11\x18\xd3\xe3\x4c\x24\xff\x77\xf1\x6d\x5d\x1c\xcf\xee\xa9\x83\xe7\x55\x30\x9b\x4f\x7e\x2a\x5e\xe5\x57\x56\xc3\xed\xd4\x02\xaa\xa6\x5b\x0b\xd6\x30\xee\x58\x0e\x28\x80\xd6\xf6\xcf\xa5\xa7\x96\x34\x6e\xb0\x08\x0a\x34\x70\xb7\xae\xd9\x37\x38\x70\x74\x47\x9f\xea\xe2\x93\x02\x07\xcf\xa4\x89\x09\xc3\x10\x5b\x08\xa8\x2a\x29\x7e\x4f\xca\xdf\xca\xa7\xc9\x74\x3e\x5b\x24\x7f\xfc\x9d\xba\xba\x1d\x15\xcb\xf3\x70\xff\xee\xe7\x5f\x7f\x28\x9e\x16\x9f\xa6\xc5\x53\x5c\xff\x5f\xca\xa7\x93\xb0\xa9\x9c\x25\xc3\x0f\x8d\xa1\x9d\xcc\xf3\x9b\xb5\xf6\xa3\xb7\xf5\xf0\x66\x65\xcd\x9a\x36\x73\x70\x2b\x5c\x8f\xd3\xbf\x7c\x9d\xd0\xb4\xff\x99\x6c\x8f\x90\xe3\x52\x7c\x89\x3c\x66\x13\xcf\x9a\x50\x57\x17\x5c\x0e\xf6\x5e\xad\xf1\x55\xc9\x62\xb9\xe3\x1b\xf1\x8f\x13\xf0\x06\x99\x9f\xab\x77\x31\x38\xfd\x2d\x17\x4f\xce\x95\x01\xc3\xda\xf1\x7e\x4a\x5e\x8a\x97\xd7\xbf\x02\x00\x00\xff\xff\x57\xe8\x1b\x3f\x5b\x08\x00\x00")

func assetsCsiControllerServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiControllerServiceYaml,
		"assets/csi-controller-service.yaml",
	)
}

func assetsCsiControllerServiceYaml() (*asset, error) {
	bytes, err := assetsCsiControllerServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-controller-service.yaml", size: 2139, mode: os.FileMode(420), modTime: time.Unix(1620838381, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiDriverEnvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcb\xb1\x0a\x02\x31\x0c\x00\xd0\xbd\x5f\x91\xc1\xb5\x83\x6b\xb6\x52\x0b\x0e\x77\x7a\x28\xb8\x87\x5e\xd4\xa0\x4d\xcb\xe5\xec\x22\xfe\xbb\x8b\xae\x0f\x1e\x35\xb9\xf0\x62\x52\x15\xa1\x6f\xdd\x43\x74\x46\x88\x55\xaf\x72\x1b\xa9\xb9\xc2\x2b\xcd\xb4\x12\x3a\x00\xa5\xc2\x08\xd9\xc4\x2f\xf7\xe2\x73\x35\xcf\xda\x7f\x6e\x8d\x32\x23\x6c\xde\x87\x30\xa6\xf3\x14\x62\xfa\xb8\xff\x9b\x86\x10\xd3\xfe\x38\xec\xd2\x09\xa1\xd3\xf3\xc5\xdf\x00\x00\x00\xff\xff\x6b\xbe\xb3\xad\x75\x00\x00\x00")

func assetsCsiDriverEnvYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiDriverEnvYaml,
		"assets/csi-driver-env.yaml",
	)
}

func assetsCsiDriverEnvYaml() (*asset, error) {
	bytes, err := assetsCsiDriverEnvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-driver-env.yaml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1620833169, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiDriverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8e\x31\x4a\x04\x41\x10\x45\xf3\x3e\x45\x5d\xc0\x96\xcd\xa4\x53\x35\x58\x70\x51\x14\xcc\x6b\xbb\xff\x38\xc5\x4e\x77\x8d\x55\x35\x03\xde\x5e\x66\xa3\xcf\x7f\xbc\xe0\xf1\x2a\xdf\x30\x17\x1d\x85\x3c\xd4\xf8\x07\xf9\xf6\xe4\x59\xf4\x71\x3f\x5d\x11\x7c\x4a\x37\x19\xad\xd0\xf3\xd7\xf9\xc5\x64\x87\xa5\x8e\xe0\xc6\xc1\x25\x11\x0d\xee\x28\x54\x5d\xb2\xcd\x3d\x57\xf5\x2c\xd7\x63\x7b\xf2\x15\xf5\x30\x76\x5d\xb6\x8e\x37\x99\x50\xff\xea\x82\x8b\x36\xf8\xc1\x1f\xe8\x75\x9d\xd1\x61\xbc\xdc\xdf\xc7\x51\xe1\x81\x11\x89\x88\x23\xb8\xce\x9f\xf8\xdd\xc4\xd0\x0a\x4d\xbc\x38\x12\xd1\xaa\xed\x3c\x26\x7d\x1f\x17\xdd\x46\x14\x0a\xdb\xf0\x1f\x00\x00\xff\xff\xd8\xeb\x11\xcc\xc2\x00\x00\x00")

func assetsCsiDriverYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiDriverYaml,
		"assets/csi-driver.yaml",
	)
}

func assetsCsiDriverYaml() (*asset, error) {
	bytes, err := assetsCsiDriverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-driver.yaml", size: 194, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiNodeServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\x20\x5c\x3f\x74\x0f\xb2\x12\xac\xc5\x3a\x01\x79\x70\x63\x2f\x0b\xda\xd8\x86\x9d\x05\x18\x86\xc1\xa0\xc9\xb3\x74\x08\x45\x0a\xe4\x49\x9b\x17\xe4\xbb\x0f\x94\x65\x59\xb2\x2d\xb7\x69\x2b\x20\x88\xcc\xfb\x7f\xbc\xdf\xef\xc4\x33\x7c\x04\xeb\xd0\xe8\x88\xf1\x2c\x73\x61\x71\x75\xf1\x84\x5a\x46\x6c\xc4\x21\x35\x7a\x01\x74\x91\x02\x71\xc9\x89\x47\x17\x8c\x69\x9e\x42\xc4\x84\xc3\xc0\x26\x69\x20\x8c\x0b\xa4\xab\x8e\x5d\xc6\x05\x44\xac\xff\x3c\x19\xde\x8f\x17\xb3\xe1\xcd\xf8\xe5\xc2\x65\x20\xbc\x99\x03\x05\x82\x8c\xf5\xef\x8c\xa5\x9c\x44\xf2\x99\xaf\x40\xb9\xed\x01\xf3\xb1\x4f\xb8\x25\x48\x33\xc5\x09\x2a\xb3\x46\x1e\xfe\x51\x2d\x0f\x5d\x3e\xb6\x4f\x4f\x38\x1c\xd8\x24\x1d\x08\xe3\x06\xb8\xf2\xff\xd3\x50\x5a\x2c\xc0\x56\xf5\xf7\x22\xd6\xeb\x3f\x8f\xe6\x77\x8f\xe3\xf9\xf2\x71\x3c\x5f\xdc\x4d\x27\x2f\xbd\xd2\xc1\xae\x8a\xf2\x1d\x6c\x81\x02\x86\x42\x98\x5c\x53\x2b\x5e\xa5\x91\x59\x34\x16\x69\x73\xa3\xb8\x73\x93\xb2\x5f\x6e\xe3\x08\xd2\x40\x1b\x09\x81\xb0\x48\x28\xb8\xaa\xb4\x85\xd1\xc4\x51\x83\xad\x0b\x09\x1a\x4d\x2e\x2d\xb6\x69\x06\x16\x62\x74\x64\xb9\xad\x8b\xc2\x94\xc7\x10\xb1\x4a\xb0\x19\x58\x90\x09\xa7\x01\x9a\xd0\x64\xa0\x5d\x82\x6b\x7a\x17\x1a\x07\x41\xa7\xab\xa8\x78\x37\xf8\x65\x70\xd9\xf6\x38\xcb\x95\x9a\x19\x85\x62\x13\xb1\xbb\xf5\xc4\xd0\xcc\x82\x03\x4d\xb5\x56\x66\x2c\x35\xfa\x1e\xec\x8b\x98\x19\x4b\x11\xfb\xf5\xc3\xe5\x87\x5a\xba\x9b\x99\x04\xb8\xa2\xe4\xbf\xc6\x79\x66\x0d\x19\x61\x54\xc4\x1e\x6e\x66\xf5\xb9\xc2\x02\x34\x38\x37\xb3\x66\x05\x51\x43\x7d\xcd\x51\xe5\x16\x1e\x12\x0b\x2e\x31\x4a\x46\xec\x7d\x43\x9a\x10\x65\xb7\x40\x4d\x03\xc6\x32\x4e\x49\xc4\xc2\xe3\xd0\xdb\x1a\x4e\x25\x85\x1a\x09\xb9\x1a\x81\xe2\x9b\x05\x08\xa3\xa5\x8b\xd8\xd5\x65\x43\x83\x30\x05\x93\x53\x2d\x6c\x66\x91\x81\x45\x23\x6b\xd1\xcf\x7b\x3b\x6e\xe3\x56\xcb\x7a\x41\x50\x5c\xbf\xef\xb5\x4f\xfc\x3d\x71\x29\x2d\x38\x77\xdd\x7f\x3b\x1c\x8d\xe6\xe3\xc5\xe2\xa7\x03\xa5\xa7\x7c\x05\x0a\xa8\xbe\x44\x42\xa3\x03\x5f\xe9\x75\xff\x6d\x35\xbe\xf3\xf1\xed\x72\x31\xbd\xf9\xb4\x9c\x0d\x1f\x7e\x6f\xd8\x3b\x10\x79\x39\x9a\x46\x13\xfc\x7b\xd8\x2c\x8b\x05\x2a\x88\x41\x46\x8c\x6c\x0e\xb5\x10\x74\xd1\xcc\x7c\x7b\x9d\x55\x72\x0d\x0f\x05\x57\x39\x44\x2c\x14\x0e\xfd\xdf\xc0\x19\xf1\x74\x64\x76\x2a\xc1\x63\x1f\xfd\xe7\x4f\x7f\x7c\x1c\x7f\x1e\x3f\x2c\xe7\xd3\xe9\xc3\x4b\x58\x95\x1c\x66\x2a\x8f\x51\xbb\xb0\x01\xba\xee\x50\xde\xc5\x72\x32\x1d\x8d\x97\x9e\x90\x0e\x83\xfc\x66\x4d\xda\xae\x7f\x8d\xa0\xe4\x1c\xd6\xed\x53\x4f\x2b\x7b\x8a\x2c\xae\x0e\x84\xa5\xd1\xac\x1c\x33\xcf\x12\x03\x8f\x32\x8f\xf9\x5a\xad\x30\x2a\x4f\xe1\xde\x93\x85\x3b\xee\x62\xeb\x0e\x25\xda\x86\xf7\xd4\x9b\x6c\x3d\x87\x4d\xb5\x23\x1f\xbe\x78\xa0\x33\xd6\xc2\xe1\x09\x6a\x69\x93\xd6\xd9\xd9\xe8\x9c\x0c\xc6\x04\xcf\xf8\x0a\x15\x12\x82\x6b\x37\x8e\x4b\x19\xb1\xbf\x7a\x8b\x3f\x17\xcb\xe1\xe8\xfe\x6e\xd2\xfb\xbb\x21\xe6\x4a\x99\x7f\x66\x3b\xb7\x63\x27\xb8\x2a\x8b\x3b\xf0\x5f\x11\xdc\x9e\x97\xef\xee\x87\xb7\xe3\x97\xa8\x83\xa7\xd9\x57\x33\xd8\x09\x34\x96\xfc\xe8\xdb\x73\xdd\x7f\xdb\x1e\x9d\x06\x80\xde\x94\x3c\xe3\xa2\x30\x8c\x91\x92\x7c\x55\xae\x11\x3f\x9d\x56\x03\x81\x0b\x85\x49\xd3\x5c\x23\x6d\xc2\x95\x32\xab\x30\xe5\x8e\xc0\x86\x9e\x1e\x2d\xae\x72\x32\xd6\x85\x12\x0a\x50\xa1\xc3\x38\x40\xed\xc8\xe6\x29\x68\x2a\x6b\x0f\x95\x89\x63\xd4\xf1\x20\x95\x67\x78\x02\x74\xd1\x1e\xdd\x92\x7d\xd7\x18\xdf\xf3\xec\x68\x78\x8f\xb7\x35\xe8\xe2\x3c\xae\x7f\x14\x6a\xbe\x13\x18\x12\x8a\x33\x13\x2d\xa1\x38\xb2\x28\xe5\x99\x41\x7d\x06\x0a\x9d\xbc\x62\x1a\x9f\x0a\x3b\x0b\x6b\x32\x1e\x57\x53\xf9\x11\x25\x5a\x10\xfe\x47\xbd\xb9\xbf\x0b\x81\xbb\x2d\x17\x64\x7e\xcd\xbd\x72\x7a\x5f\xb5\xf7\x77\x91\xca\x40\x87\xfb\xfe\x04\x0e\xbe\xb4\x83\x7e\xc4\x36\x38\x7f\xf7\xaf\x68\xe7\xd6\xd1\xd1\xa7\xd3\xe1\xf4\x24\xc6\x6d\x6d\x9b\xa4\x76\x3c\x4a\x8c\xd1\x26\xf3\x4b\xaa\xbc\x6b\x63\x37\x95\x64\x8f\xfa\x3d\xd4\x7d\x9f\x06\x15\x09\xa0\x09\xa5\x11\x1e\xda\x99\x32\x1b\x0f\xe1\x84\x52\xf5\xa6\xfa\xd8\xda\xe6\x18\x94\x05\xb8\x8b\x2f\x96\xda\x9d\xeb\x2b\xb6\x62\x77\x49\x53\x7b\x63\x81\x13\x1c\x24\xd2\x81\x9e\x6f\x48\xa6\x0d\xa5\xaf\x8b\xde\xb9\x06\xbf\xb9\x19\xcb\x1d\x38\xba\x73\xf9\x3f\x00\x00\xff\xff\xdb\xe5\xee\x3c\xfb\x0c\x00\x00")

func assetsCsiNodeServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiNodeServiceYaml,
		"assets/csi-node-service.yaml",
	)
}

func assetsCsiNodeServiceYaml() (*asset, error) {
	bytes, err := assetsCsiNodeServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-node-service.yaml", size: 3323, mode: os.FileMode(420), modTime: time.Unix(1620838642, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiReconcilerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x6e\xdb\x4a\x0c\xdd\xfb\x2b\x06\xba\x5e\xdc\x2e\x64\xa1\x8b\x6e\x04\x64\xe1\xc4\x6a\x61\x34\x7e\xc0\x4e\x03\x14\x45\x61\x50\x23\x46\x26\x32\x0f\x61\x86\x52\x62\x04\xfe\xf7\x62\x24\xc7\x96\xe0\x66\xd1\xd9\x58\xe6\xe3\xf0\xf0\x90\x84\x8a\x1e\xd1\x79\xb2\x26\x15\x50\x55\x3e\x69\x3e\x8f\x9e\xc9\x14\xa9\x98\x01\x6a\x6b\xb6\xc8\x23\x8d\x0c\x05\x30\xa4\x23\x21\x0c\x68\x4c\x85\xf4\x14\xbb\xbd\x8e\xa5\xf5\xb1\x64\xa7\x4e\x0e\x5f\x81\xc4\x54\x8c\xdf\x96\xd3\x45\xb6\x5d\x4f\xef\xb2\xe3\xc8\x57\x28\x43\xa2\x47\x85\x92\xad\x0b\xdf\x42\x68\x60\xb9\xbf\x87\x1c\x95\xef\x0c\x22\x54\xff\x2b\x30\xa3\xae\x14\x30\x9e\x12\x7b\x5c\xc2\x53\x03\x8c\x8f\x51\xba\x17\x49\x4f\x13\xb7\xd7\x13\x69\xfd\x84\xf2\xf0\xab\x93\xc2\x51\x83\xee\xa4\x42\x94\x8a\x68\xfc\x36\xdb\xcc\x1f\xb3\xcd\xee\x31\xdb\x6c\xe7\xab\xe5\x31\x6a\x01\xde\x3b\x69\xbf\xd1\x35\x24\x71\x2a\xa5\xad\x0d\x0f\x2a\x9e\x22\x2a\x47\xd6\x11\x1f\xee\x14\x78\xbf\x6c\x55\xf3\x07\xcf\xa8\x63\x63\x0b\x8c\xa5\x23\x26\x09\xef\xd4\xa4\x35\x0c\x64\xd0\x9d\x5b\x89\xaf\xa5\x3e\xb7\xe1\x51\xd6\x2d\xb6\x35\x8c\xaf\x7c\xe9\xbe\x2d\xdb\x90\xc2\x12\x8b\x54\xb0\xab\xb1\xe7\x92\x50\x41\x4e\x8a\x98\xd0\xf7\x53\x84\x80\xa2\x48\xc5\xaf\x68\xfb\x73\xbb\x9b\xce\x16\xf3\x65\xf4\xbb\xe7\x06\xa5\xec\xcb\xfa\x1d\x36\xf3\x12\x14\x70\xbb\x2f\x03\x7c\xd2\x50\x62\x5f\xbc\xf9\x62\xfa\x2d\x3b\xa6\x1f\x88\x79\x4e\x59\xd7\x4a\xad\xad\x22\x79\x48\xc5\x54\xbd\xc0\xe1\xd2\x26\xb8\xb2\x47\x34\x16\x51\xdc\x69\x17\x84\xb9\x19\xff\xff\xfd\xc7\x6d\xb6\x5b\xae\x66\xd9\x2e\xac\xdb\xa7\x0b\xee\x7f\x62\xcf\x5c\xf9\x34\x49\x4a\xe2\x7d\x9d\xb7\x53\x7e\xae\x73\x74\x06\x19\x7d\x22\xad\xd6\xb5\x21\x3e\x24\xb9\xb2\x79\xa2\xc1\x33\xba\x24\x8c\xc0\x51\x5e\xb3\x75\x3e\x29\xb0\x41\x95\x78\x2a\x63\x32\x9e\x5d\xad\xd1\x70\xdb\x75\xa2\x6c\x59\x92\x29\x27\xba\x18\x32\x6b\x6e\xbe\x44\x43\x0b\xbe\xa2\x8c\xb5\x2d\xf0\xc6\xa1\xb4\x46\x92\xc2\x4b\x04\x9a\xe6\xab\xb3\xba\xdf\x9e\xb4\xe6\x89\xca\x05\x54\x1b\x7c\x1a\xce\xe7\xfa\xe8\xd0\x34\x7d\xa8\x3e\x4c\x17\x3c\x14\xa7\x87\xd6\x80\xaa\x71\x58\x3a\xbc\x27\x42\x55\x5c\x15\x3e\xd9\xd7\xc0\xfb\xb4\xdd\xff\x49\x18\x40\xd8\xe6\x73\x58\x63\x55\xad\x71\x11\xce\xc0\x5f\xd3\xd0\xc1\x5e\x59\x32\x1c\x17\xe4\x7a\xd8\xad\xa3\xc3\x1d\xbf\x05\xb2\xf7\xd9\xc3\x6e\xb3\x5a\x3d\x1c\xdb\x49\x29\xe4\xa4\xb2\x85\xbf\xca\x70\xb6\x82\xf2\xb4\x7f\xb7\x54\x90\x43\x19\xfe\x9c\x0f\xa9\xa3\x73\x75\x45\x1f\xf0\xd8\x5b\xdf\x91\xe8\x5f\xd0\xbf\x90\xe2\x43\x85\xa9\x98\xb5\x34\xac\x3b\xac\xdc\x9d\x43\x60\xfc\x13\x00\x00\xff\xff\x31\x86\x68\x4a\x56\x05\x00\x00")

func assetsCsiReconcilerYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiReconcilerYaml,
		"assets/csi-reconciler.yaml",
	)
}

func assetsCsiReconcilerYaml() (*asset, error) {
	bytes, err := assetsCsiReconcilerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-reconciler.yaml", size: 1366, mode: os.FileMode(420), modTime: time.Unix(1620839699, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x3f\x0b\xc2\x30\x10\x47\xf7\x7c\x8a\xdf\xe0\x9a\xa1\xfe\x59\xb2\x15\xe9\xa8\x08\x05\xf7\x33\x3d\x30\xd8\x34\x47\x2e\x16\x44\xfc\xee\x52\xcd\x26\xae\xef\xdd\x3b\x7e\xb7\x30\x0d\x0e\x3d\xe7\x39\x78\x36\x24\xe1\xcc\x59\x43\x9a\x1c\xe6\xc6\x44\x2e\x34\x50\x21\x67\x80\x89\x22\x3b\x78\x0d\x36\x5f\xa3\xf5\x49\xad\x6a\xc5\x2a\xe4\xd9\x61\xf5\x3c\xb6\x87\xae\x3f\xb5\xfb\xee\x65\x80\x91\x2e\x3c\xea\x92\x02\x24\xf2\xd3\xaa\xb0\x5f\xac\xf2\xc8\xbe\xa4\xfc\xff\x12\x90\x94\x4b\x7d\x65\xeb\x92\xe1\x1e\xe3\xe3\x43\xbe\xda\xa1\x59\x6f\xb6\xbb\x77\x00\x00\x00\xff\xff\x69\x52\x69\x54\xd0\x00\x00\x00")

func assetsCsiServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiServiceYaml,
		"assets/csi-service.yaml",
	)
}

func assetsCsiServiceYaml() (*asset, error) {
	bytes, err := assetsCsiServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-service.yaml", size: 208, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiUnitTest2Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xce\xcc\x4b\xb1\x52\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\xe5\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x28\x49\x2d\x2e\x01\x04\x00\x00\xff\xff\xff\x0b\x62\x79\x35\x00\x00\x00")

func assetsCsiUnitTest2YamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiUnitTest2Yaml,
		"assets/csi-unit-test-2.yaml",
	)
}

func assetsCsiUnitTest2Yaml() (*asset, error) {
	bytes, err := assetsCsiUnitTest2YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-unit-test-2.yaml", size: 53, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiUnitTestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x0a\xc2\x30\x10\xc7\xf7\x3c\xc5\x0d\xae\x19\xea\xc7\x92\xad\x48\x47\x45\x28\xba\x1f\x97\x03\x83\x26\x39\x72\x69\x41\xc4\x77\x97\xd8\x8e\x6e\xc7\xef\xfe\x5f\x8f\x90\xbc\x83\x6b\xd2\x49\x24\x97\xca\x7e\xe4\x32\x07\x62\x83\x12\x6e\x5c\x34\xe4\xe4\x60\xee\x4c\xe4\x8a\x1e\x2b\x3a\x03\x90\x30\xb2\x03\xd2\x60\xcb\x3d\x5a\xca\x6a\x55\x57\xac\x82\xc4\x0e\x36\xef\x73\x7f\x1a\xc6\x4b\x7f\x1c\x3e\x46\x85\xa9\xd9\x94\x9f\x4c\x35\x97\x76\x03\xa0\xc8\x9f\x8c\xb6\x41\x17\x81\x5d\x7b\xfc\x14\xe3\xeb\x47\x96\xb7\x83\x6e\xbb\xdb\x1f\xbe\x01\x00\x00\xff\xff\xf3\x48\xb7\x42\xb9\x00\x00\x00")

func assetsCsiUnitTestYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiUnitTestYaml,
		"assets/csi-unit-test.yaml",
	)
}

func assetsCsiUnitTestYaml() (*asset, error) {
	bytes, err := assetsCsiUnitTestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-unit-test.yaml", size: 185, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiWebhookYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4d\xcb\xdc\x30\x0c\x84\xef\xf9\x15\xe2\xbd\x3b\x4b\x6e\xc5\xf0\x1e\xda\x65\x29\x3d\x14\x4a\x29\xed\x59\xeb\x28\x89\x9a\xd8\x32\xb2\x93\xd2\x7f\x5f\xf2\xb9\x1f\x94\xbd\x59\x93\x19\xeb\x19\x62\x8c\xfc\x93\x34\xb1\x04\x0b\x58\x7b\x4e\xf3\x51\xa9\xe5\x94\x15\x33\x4b\x28\xfb\x0f\xa9\x64\x39\x4d\xd5\x95\x32\x56\x45\xcf\xa1\xb6\xf0\x75\xcc\x98\x39\xb4\xbf\xe8\xda\x89\xf4\x67\x09\x0d\xb7\xe3\x9a\x28\x3c\x65\xac\x31\xa3\x2d\x00\x30\x04\xc9\x8b\x9c\xe6\x11\xc0\x91\x66\xe3\x31\x60\x4b\x3a\xdf\xcb\xe1\x37\xb9\x6c\x1c\x9a\x46\xc5\x5b\x90\x48\x21\x75\xdc\x64\xa3\x54\x77\x38\x7b\xb5\xa7\x1c\x07\x74\x74\xba\x3b\x9b\x79\x43\xa2\x6c\x12\xe9\xc4\xa1\x35\xf3\xc5\x05\x40\x40\x4f\x16\xfe\x67\xf4\x1b\xb3\xf9\xb3\x42\x1b\xf7\x40\xbd\xa9\x0b\xa6\x01\x37\x30\x85\xbc\xf6\x5a\xc1\x01\x1c\x7e\x1a\x43\x3d\x90\x85\x73\xfb\xfe\xbe\x89\xcb\x7a\x47\xbb\xe7\x15\xc0\xbe\x77\x8b\x3c\x24\x52\x44\x47\xaf\xdb\x1f\xfe\x88\xb9\xb3\x70\xd2\xce\x1b\x97\x78\xed\x45\x66\xaa\x4c\x94\x7a\x31\x35\xc8\xc3\xa8\xf4\x4d\x06\x76\x7f\x2d\x7c\x69\x83\xe8\x1a\x5f\xe1\x36\x90\xd2\x25\x2e\xb5\xf3\xcb\x17\x1d\x07\x4a\x7b\x0b\x03\x18\xf9\xb3\xca\x18\xd3\xad\xd8\x2c\xbf\xbd\x1d\xe3\xed\xe5\x3c\x79\xa6\xea\x18\x25\x92\xde\xff\xfc\xdd\x72\xfe\x7e\xf9\xf8\xe3\x72\x48\x4a\x49\x46\x75\xf4\xe4\x8a\x52\xa7\x7f\x01\x00\x00\xff\xff\x23\x0f\x65\x1d\xa0\x02\x00\x00")

func assetsCsiWebhookYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiWebhookYaml,
		"assets/csi-webhook.yaml",
	)
}

func assetsCsiWebhookYaml() (*asset, error) {
	bytes, err := assetsCsiWebhookYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-webhook.yaml", size: 672, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsDatasetPvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\xab\xfb\x1d\x62\x60\xc9\xda\x81\xa9\x80\x18\xba\xbb\x8e\x45\xad\x26\xf6\x11\x3b\x95\xfa\xef\x51\xd0\x89\x81\xc9\xfa\xac\xef\x3d\x3d\xdc\xe4\xcc\xdd\xc5\x34\xc3\xfd\x39\xdd\x44\x4b\x86\x8f\xf9\xf1\x60\x8d\xb3\xd5\xd1\xf8\x58\x51\x5a\x6a\x1c\x58\x30\x30\x27\x00\xc5\xc6\x19\xc8\x65\xe9\xd7\xb6\x90\xf9\xb2\xdd\x29\x01\xa0\xaa\x05\x86\x98\xfa\xd4\x60\x2a\x6b\xbf\xb6\x95\xcc\x57\xb9\xcc\xdb\x9e\x2e\x83\x6e\x1c\x9e\xe1\x80\xb5\x1e\x92\x6f\x4c\x53\x46\x22\x76\x3f\x59\xe1\xdf\xec\x02\x9f\x8c\xe5\x5d\xeb\xe3\x84\xfa\x48\x00\x9d\xdd\x46\x27\xde\x9b\x3b\x7f\x0f\xf6\xd8\x09\xc0\xc3\x3a\x7e\x71\x86\x97\x57\x49\x7f\x78\xac\xe8\xfe\xf6\x7f\xed\x4f\x00\x00\x00\xff\xff\x3e\x8e\xeb\xd4\xf6\x00\x00\x00")

func assetsDatasetPvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsDatasetPvcYaml,
		"assets/dataset-pvc.yaml",
	)
}

func assetsDatasetPvcYaml() (*asset, error) {
	bytes, err := assetsDatasetPvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/dataset-pvc.yaml", size: 246, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\xb1\x4a\x04\x41\x0c\x06\xe0\x7e\x9e\x22\x85\xed\xac\xd8\xc9\x74\xeb\x71\x58\x29\x72\x07\xf6\xd9\x6c\xf4\xe2\xed\x4e\x96\x64\xe6\x0a\xc5\x77\x97\x61\xc5\xc6\x45\xec\x86\x21\x7c\xff\x9f\x9c\x25\x8f\x09\x76\x53\xf5\xc2\x76\xd0\x89\xef\x24\x8f\x92\x5f\x03\x2e\xf2\xcc\xe6\xa2\x39\x81\x0d\x48\x1d\xd6\x72\x52\x93\x77\x2c\xa2\xb9\x3b\xdf\x7a\x27\x7a\x7d\xb9\x09\x33\x17\x1c\xb1\x60\x0a\x00\x19\x67\x4e\x40\x2e\xd1\x4e\x73\x24\xf5\xd8\xde\xb4\xea\xd1\x74\xe2\x38\x7c\xfb\xeb\xb0\x2f\x48\x9c\xe0\xea\xe3\xb1\x7f\xd8\x1f\x9f\xfa\xdd\xfe\x33\x78\x1d\xde\x98\x8a\x37\x30\xc2\x5a\xf0\xc8\x76\x11\xe2\x9e\x48\x6b\x2e\x01\x60\x23\xeb\xe7\x77\x0b\x6d\xd9\x07\x7e\x69\xe6\xaf\x95\xff\x55\x3c\x00\xe0\x22\xf7\xa6\x75\xf9\xe3\x20\x5f\x01\x00\x00\xff\xff\xe9\xe7\x0b\xcc\x4f\x01\x00\x00")

func assetsRbacCsiClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiClusterRoleBindingYaml,
		"assets/rbac-csi-cluster-role-binding.yaml",
	)
}

func assetsRbacCsiClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacCsiClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-cluster-role-binding.yaml", size: 335, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xcf\x8e\xd4\x3c\x10\xc4\xef\x79\x0a\x2b\xfa\x8e\x5f\xb2\xe2\x86\x72\x5b\xad\x56\x9c\x58\x21\x90\xb8\x20\x0e\xbd\x9d\x66\x6c\x8d\x63\x5b\xdd\xed\xf0\x4f\xbc\x3b\x72\x12\x10\x33\xe3\x59\x86\x81\x53\x5a\x56\xe9\x57\x55\x6e\x67\xef\xc2\x38\x98\x3b\x9f\x45\x89\x5f\x47\x4f\x0d\x24\xf7\x96\x58\x5c\x0c\x83\xe1\x47\xc0\x1e\xb2\xda\xc8\xee\x0b\xa8\x8b\xa1\xdf\x3f\x97\xde\xc5\x9b\xf9\x59\x33\x91\xc2\x08\x0a\x43\x63\x4c\x80\x89\x06\x83\xe2\x3a\xb6\x53\x87\x51\xba\x32\xe3\x8a\xed\xb8\x70\x57\x91\x24\x40\x1a\xcc\x7f\x5f\x1f\x6e\x5f\xde\xbf\x79\x75\x7b\x77\xff\xad\xe1\xec\x49\x0a\xa5\x33\x90\xdc\x0b\x8e\x39\xc9\x60\xde\xb5\xed\xfb\xc6\x18\x63\x98\x24\x66\x46\x5a\xce\x52\x89\x26\x4a\x41\xe7\xe8\xf3\x44\xb2\x89\x66\xe2\xc7\x45\xb0\x23\x6d\xff\x37\xad\x77\xb2\x7c\x3f\x82\xa2\x2d\x43\xfa\x31\x20\x13\x28\x95\x29\xa7\x71\x9b\x46\xf2\xa4\xb4\xa0\xae\xc8\x80\x1e\xdc\x74\x71\x90\xcd\xb5\xe2\x25\x1a\x19\x76\xb4\x5d\x71\xcd\x79\x53\xa0\x07\x91\x0b\xab\x5f\xd8\x29\xc4\xf1\x7a\xe0\xef\x83\xa3\xb8\xbf\x72\xa8\x31\x69\xa6\xa0\x27\xc4\x93\xfb\xae\xed\x3b\x5d\xdf\x64\x5d\x39\xa8\x02\xda\xa9\x16\xe0\xe9\x07\x78\xea\x69\x5a\x21\xcc\xec\xf4\x73\x1f\x13\x05\xb1\xee\x83\x16\x6f\x73\x68\xfe\x50\x7e\x9e\x45\x9e\xd8\xcd\xce\xd3\x8e\xc6\x63\xcd\x21\x0e\x63\x50\xfa\xa4\x18\x83\x28\x83\x2b\x51\xcd\x61\x56\xd3\x66\xa1\xf5\xf0\x38\x53\x1d\x9d\xe2\x58\x81\x1c\x35\x5e\x8b\xfe\x21\xf5\x46\x14\x34\xd7\x12\xae\x4b\xab\xe0\xda\x09\x78\x4f\x9a\x3c\x20\xf5\x4c\xa3\x05\xed\x31\x4e\xb5\xa5\xfd\xa2\x1c\xd9\xcd\xc4\x96\xc0\xab\x45\x4b\xb8\x3f\xb7\xc0\x9f\x8b\x5b\x7a\xd5\xda\x9c\xf1\xaf\x76\x7c\x32\xc1\xd9\xf2\x5b\x94\x7f\x7e\x07\xa0\x20\x74\xf6\xe9\x1e\x37\xff\x1e\x00\x00\xff\xff\x0a\x55\xee\xd1\x24\x06\x00\x00")

func assetsRbacCsiClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiClusterRoleYaml,
		"assets/rbac-csi-cluster-role.yaml",
	)
}

func assetsRbacCsiClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRbacCsiClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-cluster-role.yaml", size: 1572, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xbd\x4a\xc5\x40\x10\x85\xfb\x7d\x8a\x29\x6c\x37\x62\x27\xdb\x45\x09\x56\x8a\x24\x60\x3f\x99\x8c\x66\x4c\xb2\xb3\xec\x4f\x0a\xc5\x77\x97\x18\xb9\xb7\x09\xe9\x86\xe1\xf0\x7d\x87\x83\x41\xde\x38\x26\x51\xef\x20\xf6\x48\x15\x96\x3c\x6a\x94\x2f\xcc\xa2\xbe\x9a\xee\x53\x25\x7a\xbb\xde\x99\x49\xfc\xe0\xa0\xd5\x99\x1f\xc4\x0f\xe2\x3f\xcc\xc2\x19\x07\xcc\xe8\x0c\x80\xc7\x85\x1d\x50\x12\x1b\xc7\xc5\x92\x26\xfb\x77\xeb\xcc\xb6\xff\x8f\xef\xa1\x14\x90\xd8\xc1\xcd\xf7\x4b\xfd\xdc\x74\xaf\xf5\x63\xf3\x63\x52\xe9\x3f\x99\x72\xda\x40\x16\x76\x51\xc7\x71\x15\xe2\x9a\x48\x8b\xcf\x06\xe0\xc0\x71\xf9\x1e\x41\x37\x77\xcb\xef\x1b\xf3\x5a\xfd\xb4\xa9\x01\xc0\x20\x4f\x51\x4b\x38\xd9\xe2\x37\x00\x00\xff\xff\x04\x9e\x6b\x4c\x31\x01\x00\x00")

func assetsRbacCsiRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiRoleBindingYaml,
		"assets/rbac-csi-role-binding.yaml",
	)
}

func assetsRbacCsiRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacCsiRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-role-binding.yaml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\x31\x4b\x04\x41\x0c\x85\xfb\xf9\x15\x61\xb1\xdd\x11\x3b\x99\xee\x90\xc3\x4a\x11\x05\x1b\xb9\x22\x97\x0d\x6e\xd8\x9d\xcd\x90\xcc\x6e\xa1\xf8\xdf\xe5\x46\xaf\x38\xae\x0b\xdf\xfb\xf2\x1e\x16\x79\x67\x73\xd1\x25\x81\x1d\x91\x22\xae\x75\x54\x93\x2f\xac\xa2\x4b\x9c\xee\x3d\x8a\xde\x6e\x77\x61\x92\x65\x48\xf0\xaa\x33\x87\xcc\x15\x07\xac\x98\x02\xc0\x82\x99\x13\x90\x4b\x6f\x63\xee\x49\xbd\x6f\xf7\x49\xfb\x0b\xbd\x20\x71\x82\x9b\xef\xe7\xdd\xd3\xfe\xed\x65\xf7\xb0\xff\x09\xb6\xce\xec\xa7\xef\x1e\xb0\xc8\xa3\xe9\x5a\x3c\xc1\x47\xd7\x1d\x02\x00\x80\xb1\xeb\x6a\xc4\x8d\x39\x93\x71\xf5\xff\x68\x63\x3b\x36\xfc\xc9\xb5\xa1\xcb\x06\xe8\x32\xda\xc4\xb5\xcc\x48\x1c\x8d\x87\x11\x6b\x24\xcd\x1d\x5c\x37\x5f\xb8\xe4\x32\x98\x6c\x6c\x7e\x56\xcf\x4b\xd0\xa6\xe0\xf0\x1b\x00\x00\xff\xff\x10\x7f\x44\xe3\x29\x01\x00\x00")

func assetsRbacCsiRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiRoleYaml,
		"assets/rbac-csi-role.yaml",
	)
}

func assetsRbacCsiRoleYaml() (*asset, error) {
	bytes, err := assetsRbacCsiRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-role.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1620833006, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmDatasetClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\x4e\x03\x31\x0c\x40\xf7\x7c\x85\x07\xd6\x1c\x62\x43\xd9\x8e\xaa\x62\x02\xa1\x56\x62\xf7\xe5\x5c\x30\x97\x8b\x23\xc7\xe9\x00\xe2\xdf\x51\xd4\x22\x06\x10\x52\xd7\xc4\xef\xf9\x19\x0b\x3f\x93\x56\x96\x1c\x40\x27\x8c\x03\x36\x7b\x15\xe5\x77\x34\x96\x3c\x2c\xb7\x75\x60\xb9\x3e\xde\xb8\x85\xf3\x1c\x60\x93\x5a\x35\xd2\x9d\x24\xba\xe3\x3c\x73\x7e\x71\x2b\x19\xce\x68\x18\x1c\x40\xc6\x95\x02\x48\x5a\xfd\x8a\xba\x90\x95\x84\x91\x7c\xff\xad\x64\x3e\x9e\x60\xaf\x92\xc8\x4f\x67\xfc\x04\xd5\x82\x91\x02\x5c\x7d\x3c\x8e\x0f\xdb\xfd\xd3\xb8\xd9\x7e\xba\x3e\xb6\xa3\x43\xf7\x62\xe1\x7b\x95\x56\xfe\x69\x74\x00\xbf\x12\x2f\x2a\x72\xb5\x4d\x6f\x14\xad\xf6\x85\xfe\x2c\xdb\x93\x1e\x39\xd2\x18\xa3\xb4\x6c\x0e\xe0\xdb\x38\xd3\x01\x5b\xfa\x79\xf9\xe3\x80\xaf\x00\x00\x00\xff\xff\x0a\xd3\xe7\x6d\x5b\x01\x00\x00")

func assetsRbacOlmDatasetClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmDatasetClusterRoleBindingYaml,
		"assets/rbac-olm-dataset-cluster-role-binding.yaml",
	)
}

func assetsRbacOlmDatasetClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacOlmDatasetClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-dataset-cluster-role-binding.yaml", size: 347, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmDatasetClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xcd\x6e\xdb\x4c\x0c\xbc\xfb\x29\x84\xe0\xbb\xda\xc1\x77\x2b\x7c\x0b\x82\xa0\x97\xb6\x28\x52\xb4\x77\x9a\xa2\x2d\xd6\xfb\x07\x92\xab\xf4\x07\x7d\xf7\x42\x96\x13\x2b\xad\xd7\x95\x51\xc7\x4d\x6e\x36\x97\xdc\x19\xce\x72\x57\x03\x89\x3f\x91\x28\xc7\x30\xaf\x64\x01\x38\x83\x6c\x4d\x14\xfe\x06\xc6\x31\xcc\xd6\xaf\x74\xc6\xf1\xb2\xfd\x7f\xb2\xe6\x50\xcf\xab\x6b\x97\xd5\x48\x6e\xa3\xa3\x89\x27\x83\x1a\x0c\xe6\x93\xaa\x0a\xe0\x69\x5e\x45\xe7\xa7\x1e\x64\x4d\x96\x1c\x20\x4d\xbb\x55\x25\x9b\x62\x5f\x35\x95\xae\xac\x4f\xd6\x04\x48\xf3\xea\xbf\xef\xef\xae\xde\xde\x7c\x78\x7f\x75\x7d\xf3\x63\x22\xd9\x91\x76\xbb\x4d\x2b\x48\xfc\x5a\x62\x4e\x9b\xbf\x9b\x40\xb6\x86\x82\x31\x0e\x79\x6d\xd6\x84\x34\x66\x41\xda\xa6\x76\xc9\x16\xd7\x14\x84\x5a\xa6\x3b\xdd\x04\x5b\x92\xc5\x60\x1d\x85\xc0\x68\x1f\xd0\x3d\xd4\xaf\x0a\x94\x90\x34\x2f\x3e\x13\x1a\x20\x92\xea\x38\xc4\x10\xc3\xed\x76\xa3\x8f\xb7\x6f\x06\x39\x97\x9e\x4c\x18\xf7\xd6\xaf\xc8\x8a\x74\x6b\xcf\xda\x1d\xa0\xd0\x8a\xd5\x64\x0c\x6d\x9f\x0d\x8c\xc3\xea\x8e\x16\x4d\x8c\x6b\x8c\x61\xc9\xab\xdc\x97\x1e\xe6\x3f\xa4\xd3\xff\x76\xac\xbb\x3f\x39\xd5\xc3\xbc\x3b\x30\x6c\x8a\xc4\x53\xd2\x12\xc1\x1a\xc8\xc7\xa0\x64\xba\x93\xda\xc0\x68\x99\xdd\x43\xf0\x0c\x14\x7b\x61\x66\x31\x51\xd0\x86\x97\x76\x40\x52\x0e\x4b\x01\x35\xc9\x68\x59\xe8\xd8\x43\xbc\xb8\x28\xed\xdb\x53\xf0\x90\x76\x4a\x3c\xdc\x9f\x41\x28\xd6\x87\x30\xf7\xc8\x70\xb0\xef\x32\x1d\x6a\x29\x8c\xd2\xff\x11\x58\xda\x82\x1d\x7f\x02\x65\x26\xa9\x7b\xb6\xd4\x28\x58\x1b\x5d\xf6\x84\x0e\xd8\x8f\x61\x56\x93\xa3\x53\x0f\xca\x78\x9a\xa7\x64\xf8\x24\xb2\xc6\xfa\xb8\x41\x7a\x4c\xe2\x2f\x50\x2f\xbb\x1b\x9e\xf7\x82\x3f\xb4\x76\xe4\xb6\x4a\x28\x85\xe7\xe2\xd4\x17\x43\x49\x5a\x46\x02\xc4\x98\xc3\xf0\xd9\xea\xe3\xff\x6a\x30\x07\x9f\xe3\x99\x50\xdd\x80\xcd\x30\xfa\xe2\x77\x61\x97\x8d\xca\xb5\x70\x4b\xf2\x3c\x06\xf6\x04\x7d\x1c\x98\xaf\x21\xe1\x02\xc7\xd3\xb2\xda\x3a\xa3\x17\xae\xed\x7d\x17\xcf\x4a\xd9\xcd\x61\x37\x04\xce\x1a\x6c\x08\xd7\x2f\x5d\xe3\xdf\xfa\x79\x02\xb5\x8b\xce\xbf\xe8\x4a\x7a\x47\xdf\x19\xfa\x05\x87\x9a\xc3\x4a\xf7\xad\xed\x82\x7b\x33\x77\x29\x67\xf0\x72\x4a\x98\x85\xed\xeb\x28\x37\x77\x9f\x8c\x31\x18\x7d\x31\x8c\xa1\x73\xd6\x5c\xb0\x3e\x59\x8b\xca\xaa\x45\x81\x15\xfd\x49\xce\xc7\x8f\xed\xa0\x10\x1d\xa8\x9e\x51\xa4\xb1\x74\x4f\x6c\x38\xc7\xe1\xf6\x0e\x0a\xcc\x00\x1b\x5f\xf2\xa1\xc7\x18\x95\x9f\x01\x00\x00\xff\xff\xf2\xa1\xd4\xd8\xfe\x0e\x00\x00")

func assetsRbacOlmDatasetClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmDatasetClusterRoleYaml,
		"assets/rbac-olm-dataset-cluster-role.yaml",
	)
}

func assetsRbacOlmDatasetClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRbacOlmDatasetClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-dataset-cluster-role.yaml", size: 3838, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmLeaderRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\xbb\x4e\x2b\x31\x10\x06\xe0\xde\x4f\x31\xc5\x69\xbd\x47\x74\xc8\xdd\x82\x22\x2a\x10\x4a\x24\xfa\x59\xfb\x0f\x0c\xeb\xf5\x58\xbe\xa4\x00\xf1\xee\xc8\x22\x28\x0d\xa2\xa0\x9d\xcb\x37\xff\x70\x96\x27\x94\x2a\x9a\x1c\x95\x85\xfd\xc4\xbd\xbd\x68\x91\x37\x6e\xa2\x69\x5a\xaf\xeb\x24\xfa\xff\x74\x65\x56\x49\xc1\xd1\x5e\x23\x6e\x24\x05\x49\xcf\x66\x43\xe3\xc0\x8d\x9d\x21\x4a\xbc\xc1\x91\xc6\xcd\x6e\x5c\x56\xb4\x1c\xd9\xc3\x8e\x6e\x45\xb3\x11\x1c\x50\x2c\x22\xfc\x50\x6d\xd1\x08\xbb\x9c\x99\xaf\xe5\x9a\xd9\xc3\xd1\xbf\xf7\x87\xf9\x7e\x77\x78\x9c\x6f\x77\x1f\x66\x8c\xed\x71\x1c\x3e\x67\xb9\x2b\xda\xf3\x2f\x21\x0d\xd1\x25\xe3\x9f\x22\x99\xda\x97\x57\xf8\x56\xc7\x45\x7b\xd6\x0e\x28\x27\xf1\x98\xbd\xd7\x9e\x9a\x21\xfa\x96\x03\x8e\xdc\xe3\xa5\xf2\xc3\x07\x9f\x01\x00\x00\xff\xff\x18\xab\xa1\x74\x5d\x01\x00\x00")

func assetsRbacOlmLeaderRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmLeaderRoleBindingYaml,
		"assets/rbac-olm-leader-role-binding.yaml",
	)
}

func assetsRbacOlmLeaderRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacOlmLeaderRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-leader-role-binding.yaml", size: 349, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmLeaderRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x4f\x4b\x03\x31\x10\xc5\xef\xfb\x29\x42\xf1\x9a\x2d\xde\x64\x6f\x45\x8a\x27\x45\x14\xbc\x4f\xb3\xcf\x36\x6c\xfe\x31\x99\xac\xa0\xf8\xdd\x25\x11\xda\x55\x14\xb1\x39\xcd\xcb\xcb\xfc\xde\x0b\x25\xfb\x04\xce\x36\x86\x41\xf1\x8e\x4c\x4f\x45\x0e\x91\xed\x2b\x89\x8d\xa1\x9f\xae\x72\x6f\xe3\x7a\xbe\xec\x26\x1b\xc6\x41\x3d\x44\x87\xce\x43\x68\x24\xa1\xa1\x53\x2a\x90\xc7\xa0\xa2\xf3\xda\x13\x4f\x90\xe4\xc8\x40\x57\x37\x43\xb4\x03\x8d\x60\x0d\x07\x53\x71\x9a\xeb\xfa\xe7\x52\x4e\x64\x30\xa8\x8b\xb7\xbb\xcd\xed\xf6\xf1\x7e\x73\xbd\x7d\xef\xb8\x38\xe4\x4a\xd5\x8a\x92\xbd\xe1\x58\x52\x93\xf5\x68\xb5\x5a\xb5\x91\x91\x63\x61\x83\x85\x63\x62\x78\xb6\x7b\x4f\x29\xb7\xab\x19\xbc\x5b\xb8\x7b\xc8\x71\x76\x36\x9f\xc4\x0b\x89\x39\x9c\x20\x0c\x12\x1c\x65\x49\xe3\x52\xa6\x2f\x6f\x47\x38\x34\xf3\xec\xa2\xeb\x2c\x24\xe5\xcf\xbe\xbf\xb4\xf8\x67\x2c\x66\x04\xf9\x31\xeb\xdb\xa7\x1b\xff\x23\x00\x00\xff\xff\x5f\x97\xd0\xe4\x13\x02\x00\x00")

func assetsRbacOlmLeaderRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmLeaderRoleYaml,
		"assets/rbac-olm-leader-role.yaml",
	)
}

func assetsRbacOlmLeaderRoleYaml() (*asset, error) {
	bytes, err := assetsRbacOlmLeaderRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-leader-role.yaml", size: 531, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x2a\xcb\x4c\x4e\x75\x4c\x4e\xce\x2f\xcd\x2b\xe1\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x48\x2e\xce\xd4\x2d\xca\xc8\xd5\x4d\xce\x2f\x86\x8a\x15\x17\x24\x26\xa7\x5a\x29\xa8\x54\xfb\x39\xfa\xba\x06\x07\x38\x3a\xbb\xd6\x02\x02\x00\x00\xff\xff\x14\xe2\x78\xcd\x5b\x00\x00\x00")

func assetsRbacServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacServiceAccountYaml,
		"assets/rbac-service-account.yaml",
	)
}

func assetsRbacServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRbacServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-service-account.yaml", size: 91, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStorageClassYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcb\x31\x0e\xc2\x30\x0c\x46\xe1\x3d\xa7\xf0\x05\x6a\xd4\x0d\x65\xe5\x08\x48\xec\x6e\x6a\x51\xab\x38\xae\xfc\x47\x3d\x3f\x2a\x4c\x6f\xf8\xf4\x76\xeb\x6b\xa5\xe7\x88\x94\xb7\x3e\x3e\x02\x14\x39\xec\xa5\x09\x8b\x5e\x09\x7f\xe0\xfd\x0e\xb6\xb8\x9d\xf3\xa2\x43\xe6\xe2\x3a\x64\x95\x21\xb5\x10\x75\x71\xad\xd4\x60\x53\x6e\x3e\xb5\x40\x39\x32\x4e\xbb\x7e\xcd\x1f\x70\x6e\xce\x2d\xc0\xb6\x5c\xf5\x6f\x00\x00\x00\xff\xff\x01\x9e\xa6\xbc\x74\x00\x00\x00")

func assetsStorageClassYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsStorageClassYaml,
		"assets/storage-class.yaml",
	)
}

func assetsStorageClassYaml() (*asset, error) {
	bytes, err := assetsStorageClassYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/storage-class.yaml", size: 116, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/csi-controller-service.yaml":                assetsCsiControllerServiceYaml,
	"assets/csi-driver-env.yaml":                        assetsCsiDriverEnvYaml,
	"assets/csi-driver.yaml":                            assetsCsiDriverYaml,
	"assets/csi-node-service.yaml":                      assetsCsiNodeServiceYaml,
	"assets/csi-reconciler.yaml":                        assetsCsiReconcilerYaml,
	"assets/csi-service.yaml":                           assetsCsiServiceYaml,
	"assets/csi-unit-test-2.yaml":                       assetsCsiUnitTest2Yaml,
	"assets/csi-unit-test.yaml":                         assetsCsiUnitTestYaml,
	"assets/csi-webhook.yaml":                           assetsCsiWebhookYaml,
	"assets/dataset-pvc.yaml":                           assetsDatasetPvcYaml,
	"assets/rbac-csi-cluster-role-binding.yaml":         assetsRbacCsiClusterRoleBindingYaml,
	"assets/rbac-csi-cluster-role.yaml":                 assetsRbacCsiClusterRoleYaml,
	"assets/rbac-csi-role-binding.yaml":                 assetsRbacCsiRoleBindingYaml,
	"assets/rbac-csi-role.yaml":                         assetsRbacCsiRoleYaml,
	"assets/rbac-olm-dataset-cluster-role-binding.yaml": assetsRbacOlmDatasetClusterRoleBindingYaml,
	"assets/rbac-olm-dataset-cluster-role.yaml":         assetsRbacOlmDatasetClusterRoleYaml,
	"assets/rbac-olm-leader-role-binding.yaml":          assetsRbacOlmLeaderRoleBindingYaml,
	"assets/rbac-olm-leader-role.yaml":                  assetsRbacOlmLeaderRoleYaml,
	"assets/rbac-service-account.yaml":                  assetsRbacServiceAccountYaml,
	"assets/storage-class.yaml":                         assetsStorageClassYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"csi-controller-service.yaml":                &bintree{assetsCsiControllerServiceYaml, map[string]*bintree{}},
		"csi-driver-env.yaml":                        &bintree{assetsCsiDriverEnvYaml, map[string]*bintree{}},
		"csi-driver.yaml":                            &bintree{assetsCsiDriverYaml, map[string]*bintree{}},
		"csi-node-service.yaml":                      &bintree{assetsCsiNodeServiceYaml, map[string]*bintree{}},
		"csi-reconciler.yaml":                        &bintree{assetsCsiReconcilerYaml, map[string]*bintree{}},
		"csi-service.yaml":                           &bintree{assetsCsiServiceYaml, map[string]*bintree{}},
		"csi-unit-test-2.yaml":                       &bintree{assetsCsiUnitTest2Yaml, map[string]*bintree{}},
		"csi-unit-test.yaml":                         &bintree{assetsCsiUnitTestYaml, map[string]*bintree{}},
		"csi-webhook.yaml":                           &bintree{assetsCsiWebhookYaml, map[string]*bintree{}},
		"dataset-pvc.yaml":                           &bintree{assetsDatasetPvcYaml, map[string]*bintree{}},
		"rbac-csi-cluster-role-binding.yaml":         &bintree{assetsRbacCsiClusterRoleBindingYaml, map[string]*bintree{}},
		"rbac-csi-cluster-role.yaml":                 &bintree{assetsRbacCsiClusterRoleYaml, map[string]*bintree{}},
		"rbac-csi-role-binding.yaml":                 &bintree{assetsRbacCsiRoleBindingYaml, map[string]*bintree{}},
		"rbac-csi-role.yaml":                         &bintree{assetsRbacCsiRoleYaml, map[string]*bintree{}},
		"rbac-olm-dataset-cluster-role-binding.yaml": &bintree{assetsRbacOlmDatasetClusterRoleBindingYaml, map[string]*bintree{}},
		"rbac-olm-dataset-cluster-role.yaml":         &bintree{assetsRbacOlmDatasetClusterRoleYaml, map[string]*bintree{}},
		"rbac-olm-leader-role-binding.yaml":          &bintree{assetsRbacOlmLeaderRoleBindingYaml, map[string]*bintree{}},
		"rbac-olm-leader-role.yaml":                  &bintree{assetsRbacOlmLeaderRoleYaml, map[string]*bintree{}},
		"rbac-service-account.yaml":                  &bintree{assetsRbacServiceAccountYaml, map[string]*bintree{}},
		"storage-class.yaml":                         &bintree{assetsStorageClassYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
