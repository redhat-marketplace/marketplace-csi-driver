// Code generated for package assets by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/csi-controller-service.yaml
// assets/csi-driver.yaml
// assets/csi-node-service.yaml
// assets/csi-reconciler.yaml
// assets/csi-service.yaml
// assets/csi-unit-test-2.yaml
// assets/csi-unit-test.yaml
// assets/csi-webhook.yaml
// assets/dataset-pvc.yaml
// assets/rbac-csi-cluster-role-binding.yaml
// assets/rbac-csi-cluster-role.yaml
// assets/rbac-csi-role-binding.yaml
// assets/rbac-csi-role.yaml
// assets/rbac-olm-dataset-cluster-role-binding.yaml
// assets/rbac-olm-dataset-cluster-role.yaml
// assets/rbac-olm-leader-role-binding.yaml
// assets/rbac-olm-leader-role.yaml
// assets/rbac-service-account.yaml
// assets/storage-class.yaml
package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCsiControllerServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\x51\x8b\xe3\x36\x10\x7e\xdf\x5f\x21\xcc\x3e\x5c\x1f\x6c\xf7\xe0\x4a\x41\xb0\x0f\xe9\xc5\x2d\xa1\x4d\x2e\xc4\x74\xa1\x94\x12\x26\xf2\x24\x19\x4e\x96\x84\x34\x76\x13\x96\xfc\xf7\x22\x3b\xc9\xda\xb7\xd9\x76\xb9\xbe\xf4\xa1\x7a\xd9\x65\xf2\xcd\xa7\x99\xf9\x3e\x8d\x3f\x93\xa9\xa4\x28\x19\x18\xb7\x8d\x2e\x91\xef\xc0\xd1\x23\xfa\x40\xd6\x48\x01\xce\x85\xbc\x7d\x7f\x57\x23\x43\x05\x0c\xf2\x4e\x08\x03\x35\x4a\xa1\x02\xa5\x7e\x5f\xa7\xca\x86\x34\x84\x73\x38\x38\x50\x28\xc5\xfd\xd3\x62\x32\x2f\xca\xe5\xe4\x63\x71\xba\x0b\x0e\x55\x4c\x0b\xe8\x5b\x52\xb8\xb8\x9d\xed\xd1\x69\x52\x10\xa4\x78\xdf\x61\x35\x2a\xb6\x3e\xe6\x09\x51\x03\xab\xfd\x2f\xb0\x41\x1d\xfa\x80\x88\x75\xdd\x20\x61\xac\x9d\x06\xc6\x73\xda\xa0\xe6\x78\xf4\x88\xe1\x35\x8e\xfe\x24\x2a\x50\xe6\xf7\x75\xa6\x6c\xc8\x68\x13\xff\xd6\x79\xe5\xa9\x45\x7f\x9e\x4d\x22\x45\x72\xff\x34\x5d\xcd\x1e\x8b\xd5\xfa\xb1\x58\x95\xb3\x4f\x8b\x53\xd2\x11\x5c\x3a\xee\xfe\xef\xbb\x9e\x28\x65\x1b\xc3\xa3\xfb\xce\x08\xe7\xc9\x7a\xe2\xe3\x47\x0d\x21\xf4\xd3\x09\xc7\xc0\x58\xa7\xc6\x56\x98\x2a\x4f\x4c\x0a\xf4\x19\xad\xac\x61\x20\x83\xfe\xda\x48\x3a\x10\x04\x98\x41\xed\xd1\x5f\xfb\xa0\x1a\x76\x28\x85\xc7\x1d\x05\xf6\xc7\xcc\x63\xb5\x07\xce\xc8\xe6\xd6\xa1\x09\x7b\xda\xf2\x87\xdc\x06\x4c\x63\x36\x1e\x18\xbd\x01\x7d\xa5\x91\xed\x87\xec\xfb\xec\xdb\xe7\x89\xf9\xdd\x60\x7e\xa9\x48\xd2\x2e\x0f\xaa\xca\x63\x08\x0f\xf7\xef\x26\xd3\xe9\xaa\x28\xcb\x6f\x92\x31\xa8\x7d\xf8\xee\x39\x82\xa6\x1d\x72\xf4\xc5\x9f\x13\xaf\x71\x21\x5a\xd0\x0d\x4a\x91\xb7\xe0\x73\x4d\x9b\x5c\x05\xca\x83\x55\x9f\x91\x43\xee\x74\xb3\x23\xe3\xbc\x3d\x1c\x63\x3c\x8b\xf1\x71\xcb\xcb\x46\xeb\xa5\xd5\xa4\x8e\x52\xcc\xb6\x0b\xcb\x4b\x8f\x01\x0d\x5f\x51\xad\xd5\x4d\x8d\xf3\x28\x4a\x78\x59\x4e\x7f\x51\x5a\x91\x1f\x54\x54\x47\xf0\x12\x78\xff\x86\xaa\x6e\x68\xe3\xbc\x6d\x29\x3a\xe7\x5f\xcb\x33\x60\x7a\x83\x42\x78\x60\x0f\xa9\xf2\x08\x8c\xe9\xe5\x4d\x24\xff\xab\xf8\x75\x2a\x8e\xdf\xee\x55\xc1\xe7\x55\x30\x9b\x4f\x7e\x2a\x4e\xf2\x95\xd5\xf0\xf6\xd6\x02\xaa\xa6\x5b\x0b\xd6\x30\x1e\x58\x0e\x5a\x00\xad\xed\x9f\x4b\x4f\x2d\x69\xdc\x61\x11\x14\x68\xe0\x6e\x5d\xb3\x6f\x70\x00\x74\x17\x4c\xf5\xe2\x27\x05\x0e\x36\xa4\x89\x09\xc3\x90\x5b\x08\xa8\x2a\x29\x7e\x4f\xca\xdf\xca\xf5\x64\x3a\x9f\x2d\x92\x3f\xfe\xce\x5d\xdd\x8e\x8a\xe3\x79\xb8\x7f\xf7\xf3\xaf\x3f\x14\xeb\xc5\xa7\x69\xb1\x8e\xeb\xff\x4b\xfb\x74\x16\x36\x95\xb3\x64\xf8\xa1\x31\x74\x90\x79\xfe\xdf\xf0\xda\x85\x72\x5c\xff\x97\xcc\x3f\x7a\x5b\x8f\x27\xb5\x25\xd4\xd5\x0a\xb7\xe3\xe8\x39\xde\x5b\x2c\x7e\x0a\xb2\x38\xa3\xb8\xd8\xff\xd1\xb6\x5f\xe1\xcd\x78\x5e\x71\x7b\x7f\xcb\x8b\xef\xc4\x8d\x57\x81\xb5\xe3\xe3\x94\xbc\x14\x4f\xa7\xbf\x02\x00\x00\xff\xff\xbe\xc4\x46\x46\x10\x08\x00\x00")

func assetsCsiControllerServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiControllerServiceYaml,
		"assets/csi-controller-service.yaml",
	)
}

func assetsCsiControllerServiceYaml() (*asset, error) {
	bytes, err := assetsCsiControllerServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-controller-service.yaml", size: 2064, mode: os.FileMode(420), modTime: time.Unix(1617298479, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiDriverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8e\x31\x4a\x04\x41\x10\x45\xf3\x3e\x45\x5d\xc0\x96\xcd\xa4\x53\x35\x58\x70\x51\x14\xcc\x6b\xbb\xff\x38\xc5\x4e\x77\x8d\x55\x35\x03\xde\x5e\x66\xa3\xcf\x7f\xbc\xe0\xf1\x2a\xdf\x30\x17\x1d\x85\x3c\xd4\xf8\x07\xf9\xf6\xe4\x59\xf4\x71\x3f\x5d\x11\x7c\x4a\x37\x19\xad\xd0\xf3\xd7\xf9\xc5\x64\x87\xa5\x8e\xe0\xc6\xc1\x25\x11\x0d\xee\x28\x54\x5d\xb2\xcd\x3d\x57\xf5\x2c\xd7\x63\x7b\xf2\x15\xf5\x30\x76\x5d\xb6\x8e\x37\x99\x50\xff\xea\x82\x8b\x36\xf8\xc1\x1f\xe8\x75\x9d\xd1\x61\xbc\xdc\xdf\xc7\x51\xe1\x81\x11\x89\x88\x23\xb8\xce\x9f\xf8\xdd\xc4\xd0\x0a\x4d\xbc\x38\x12\xd1\xaa\xed\x3c\x26\x7d\x1f\x17\xdd\x46\x14\x0a\xdb\xf0\x1f\x00\x00\xff\xff\xd8\xeb\x11\xcc\xc2\x00\x00\x00")

func assetsCsiDriverYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiDriverYaml,
		"assets/csi-driver.yaml",
	)
}

func assetsCsiDriverYaml() (*asset, error) {
	bytes, err := assetsCsiDriverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-driver.yaml", size: 194, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiNodeServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\x20\x5c\x3f\x74\x0f\xb2\x5a\xac\xc5\x3a\x01\x79\x70\x63\x2d\x0b\xda\xd8\x86\x9d\x05\x18\x86\xc1\xa0\xc9\x8b\x74\x08\x45\x0a\xe4\x49\x9b\x17\xe4\xbb\x0f\x94\x65\x59\xb2\x2d\xb7\x69\x2b\x20\x88\xcc\xfb\x7f\xfc\xdd\xef\xc4\x73\xbc\x07\xeb\xd0\xe8\x88\xf1\x3c\x77\x61\xf9\xf6\xe2\x11\xb5\x8c\xd8\x84\x43\x66\xf4\x12\xe8\x22\x03\xe2\x92\x13\x8f\x2e\x18\xd3\x3c\x83\x88\x09\x87\x81\x4d\xb3\x40\x18\x17\x48\x57\x1f\xbb\x9c\x0b\x88\xd8\xf0\x69\x3a\xbe\x8d\x97\xf3\xf1\x55\xfc\x7c\xe1\x72\x10\xde\xcc\x81\x02\x41\xc6\xfa\x77\xc6\x32\x4e\x22\xfd\xcc\xd7\xa0\xdc\xf6\x80\xf9\xd8\x27\xdc\x12\x64\xb9\xe2\x04\xb5\x59\x2b\x0f\xff\xa8\x8e\x87\x3e\x1f\xdb\x67\x20\x1c\x8e\x6c\x9a\x8d\x84\x71\x23\x5c\xfb\xff\x59\x28\x2d\x96\x60\xeb\xfa\x07\x11\x1b\x0c\x9f\x26\x8b\x9b\xfb\x78\xb1\xba\x8f\x17\xcb\x9b\xd9\xf4\x79\x50\x39\xd8\x55\x51\xbd\x83\x2d\x51\xc0\x58\x08\x53\x68\xea\xc4\xab\x35\x72\x8b\xc6\x22\x6d\xae\x14\x77\x6e\x5a\xf5\xcb\x6d\x1c\x41\x16\x68\x23\x21\x10\x16\x09\x05\x57\xb5\xb6\x30\x9a\x38\x6a\xb0\x4d\x21\x41\xab\xc9\x95\xc5\x36\xcd\xc0\x42\x82\x8e\x2c\xb7\x4d\x51\x98\xf1\x04\x22\x56\x0b\x36\x23\x0b\x32\xe5\x34\x42\x13\x9a\x1c\xb4\x4b\xf1\x81\xde\x85\xc6\x41\xd0\xeb\x2a\x2a\xdf\x8d\x7e\x19\xbd\xe9\x7a\x9c\x17\x4a\xcd\x8d\x42\xb1\x89\xd8\xcd\xc3\xd4\xd0\xdc\x82\x03\x4d\x8d\x56\x6e\x2c\xb5\xfa\x1e\xec\x8b\x98\x1b\x4b\x11\xfb\xf5\xc3\x9b\x0f\x8d\x74\x87\x99\x14\xb8\xa2\xf4\xbf\xd6\x79\x6e\x0d\x19\x61\x54\xc4\xee\xae\xe6\xcd\xb9\xc2\x12\x34\x38\x37\xb7\x66\x0d\x51\x4b\xfd\x81\xa3\x2a\x2c\xdc\xa5\x16\x5c\x6a\x94\x8c\xd8\xfb\x96\x34\x25\xca\xaf\x81\xda\x06\x8c\xe5\x9c\xd2\x88\x85\xc7\xa1\xb7\x35\x9c\x4a\x0a\x35\x12\x72\x35\x01\xc5\x37\x4b\x10\x46\x4b\x17\xb1\xb7\x6f\x5a\x1a\x84\x19\x98\x82\x1a\x61\x3b\x8b\x1c\x2c\x1a\xd9\x88\x7e\xde\xdb\x71\x9b\x74\x5a\x36\x08\x82\xf2\xf2\xfd\xa0\x7b\xe2\xef\x89\x4b\x69\xc1\xb9\xcb\xe1\xeb\xf1\x64\xb2\x88\x97\xcb\x9f\x0e\x94\x1e\x8b\x35\x28\xa0\xe6\x12\x09\x8d\x0e\x7c\xa5\x97\xc3\xd7\x35\x7c\x17\xf1\xf5\x6a\x39\xbb\xfa\xb4\x9a\x8f\xef\x7e\x6f\xd9\x3b\x10\x45\x05\x4d\xa3\x09\xfe\x3d\x6c\x96\xc5\x12\x15\x24\x20\x23\x46\xb6\x80\x46\x08\xba\x6c\x67\xbe\xbd\xce\x3a\xb9\x96\x87\x92\xab\x02\x22\x16\x0a\x87\xfe\x6f\xe4\x8c\x78\x3c\x32\x3b\x95\xe0\xb1\x8f\xe1\xd3\xa7\x3f\x3e\xc6\x9f\xe3\xbb\xd5\x62\x36\xbb\x7b\x0e\xeb\x92\xc3\x5c\x15\x09\x6a\x17\xb6\x86\xae\x3f\x94\x77\xb1\x9a\xce\x26\xf1\xca\x13\xd2\x61\x90\xdf\xac\xc9\xba\xf5\x3f\x20\x28\xb9\x80\x87\xee\xa9\xa7\x95\x3d\x45\x96\x6f\x0f\x84\x95\xd1\xbc\x82\x99\x67\x89\x91\x9f\x32\x3f\xf3\x8d\x5a\x69\x54\x91\xc1\xad\x27\x0b\x77\xdc\xc5\xce\x1d\x4a\xb4\x2d\xef\x99\x37\xd9\x7a\x0e\xdb\x6a\x47\x3e\x7c\xf1\x40\x67\xac\x85\xc3\x13\xd4\xd2\x25\xad\xb3\xd8\xe8\x45\x06\x63\x82\xe7\x7c\x8d\x0a\x09\xc1\x75\x1b\xc7\xa5\x8c\xd8\x5f\x83\xe5\x9f\xcb\xd5\x78\x72\x7b\x33\x1d\xfc\xdd\x12\x73\xa5\xcc\x3f\xf3\x9d\xdb\xd8\x09\xae\xaa\xe2\x0e\xfc\xd7\x04\xb7\xe7\xe5\x9b\xdb\xf1\x75\xfc\x1c\xf5\xf0\x34\xfb\x6a\x06\x3b\x31\x8d\x15\x3f\xfa\xf6\x5c\x0e\x5f\x77\xa1\xd3\x1a\xa0\x57\x15\xcf\xb8\x28\x0c\x13\xa4\xb4\x58\x57\x6b\xc4\xa3\xd3\x6a\x20\x70\xa1\x30\x59\x56\x68\xa4\x4d\xb8\x56\x66\x1d\x66\xdc\x11\xd8\xd0\xd3\xa3\xc5\x75\x41\xc6\xba\x50\x42\x09\x2a\x74\x98\x04\xa8\x1d\xd9\x22\x03\x4d\x55\xed\xa1\x32\x49\x82\x3a\x19\x65\xf2\x0c\x4f\x9c\x1c\xc6\x1f\x05\xf5\xef\x44\xb3\x84\xf2\x0c\x0c\x25\x94\x47\x16\x95\x3c\x37\xa8\xcf\xe0\xb7\x97\x0c\x4c\x6b\xbf\xef\x2c\xac\xc9\x79\x52\x43\xe9\x23\x4a\xb4\x20\xfc\x8f\x66\xdd\x7e\xd7\xd8\xec\x56\x53\x90\xfb\xdd\xf4\x42\xc8\xbd\x68\x59\xef\x22\x55\x81\x0e\x97\xf4\x09\xf0\x7e\x69\x71\xfc\x08\x0a\x3f\x7f\xf7\x2f\x68\xe7\xd6\xd1\xd1\xf7\xce\x21\x7a\x52\xe3\xb6\xb6\x6d\x26\x3a\x86\x12\x63\xb4\xc9\xfd\x66\xa9\xee\xda\xd8\x4d\x2d\xd9\x8f\xea\x7e\x3e\x7d\x9f\x46\xf5\xe4\xa2\x09\xa5\x11\x7e\x1e\x73\x65\x36\x7e\xee\x52\xca\xd4\xab\xfa\x0b\x69\x9b\x63\x50\x15\xe0\x2e\xbe\x58\x6a\x7f\xae\x2f\x58\x65\xfd\x25\xcd\xec\x95\x05\x4e\x70\x90\x48\xcf\xf4\x7c\x43\x32\xdd\x51\xfa\xba\xe8\xbd\xbb\xeb\x9b\x9b\xb1\xda\x0d\x47\x7f\x2e\xff\x07\x00\x00\xff\xff\x43\xcb\x58\x4b\xb0\x0c\x00\x00")

func assetsCsiNodeServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiNodeServiceYaml,
		"assets/csi-node-service.yaml",
	)
}

func assetsCsiNodeServiceYaml() (*asset, error) {
	bytes, err := assetsCsiNodeServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-node-service.yaml", size: 3248, mode: os.FileMode(420), modTime: time.Unix(1617298389, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiReconcilerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\x08\x7d\x3e\x7c\x3d\xc8\x42\x0f\xbd\x08\xc8\xc1\x89\xd5\xc2\x68\xfc\x03\x3b\x0d\x50\x14\x85\xb1\xa2\x36\xf2\x22\xfc\x11\xc8\x95\x12\x23\xf0\xbb\x17\x94\x1c\x5b\x82\x9b\x43\x75\x31\xbd\xcb\x1d\xce\xcc\x0e\x54\xf4\x88\xce\x93\x35\xa9\x80\xaa\xf2\x49\xf3\x79\xf4\x4c\xa6\x48\xc5\x0c\x50\x5b\xb3\x45\x1e\x69\x64\x28\x80\x21\x1d\x09\x61\x40\x63\x2a\xa4\xa7\xd8\xed\x75\x2c\xad\x8f\x25\x3b\x75\x6a\xf8\x0a\x24\xa6\x62\xfc\xb6\x9c\x2e\xb2\xed\x7a\x7a\x97\x1d\x47\xbe\x42\x19\x06\x3d\x2a\x94\x6c\x5d\x38\x0b\xa1\x81\xe5\xfe\x1e\x72\x54\xbe\x2b\x88\xf0\xfa\x5f\x81\x19\x75\xa5\x80\xf1\x34\xd8\xe3\x12\x3e\x35\xc0\xf8\x18\xa5\xfb\x22\xe9\x69\xe2\xf6\x7a\x22\xad\x9f\x50\x1e\x7e\x75\x52\x38\x6a\xd0\x9d\x5c\x88\x52\x11\x8d\xdf\x66\x9b\xf9\x63\xb6\xd9\x3d\x66\x9b\xed\x7c\xb5\x3c\x46\x2d\xc0\xbb\x92\xf6\x8c\xae\x21\x89\x53\x29\x6d\x6d\x78\xf0\xe2\xe9\x46\xe5\xc8\x3a\xe2\xc3\x9d\x02\xef\x97\xad\x6b\xfe\xe0\x19\x75\x6c\x6c\x81\xb1\x74\xc4\x24\xe1\x9d\x9a\xb4\x86\x81\x0c\xba\xb3\x94\xf8\xda\xea\xb3\x0c\x8f\xb2\x6e\xb1\xad\x61\x7c\xe5\x8b\xfa\xf6\xd9\x86\x14\x96\x58\xa4\x82\x5d\x8d\xbd\x96\x84\x0a\x72\x52\xc4\x84\xbe\x3f\x22\x04\x14\x45\x2a\x7e\x45\xdb\x9f\xdb\xdd\x74\xb6\x98\x2f\xa3\xdf\xbd\x36\x28\x65\x5f\xd6\xef\xb0\x99\x97\xa0\x80\xdb\xbc\x0c\xf0\x49\x43\x89\x7d\xf3\xe6\x8b\xe9\xb7\xec\x98\x7e\x60\xe6\x79\x64\x5d\x2b\xb5\xb6\x8a\xe4\x21\x15\x53\xf5\x02\x87\x8b\x4c\x70\x65\x8f\x68\x2c\xa2\xb8\xf3\x2e\x18\x73\x33\xfe\xff\xfb\x8f\xdb\x6c\xb7\x5c\xcd\xb2\x5d\x88\xdb\xa7\x0b\xee\x7f\x62\xcf\x5c\xf9\x34\x49\x4a\xe2\x7d\x9d\xb7\x5b\x7e\xae\x73\x74\x06\x19\x7d\x22\xad\xd6\xb5\x21\x3e\x24\xb9\xb2\x79\xa2\xc1\x33\xba\x24\xac\xc0\x51\x5e\xb3\x75\x3e\x29\xb0\x41\x95\x78\x2a\x63\x32\x9e\x5d\xad\xd1\x70\xab\x3a\x51\xb6\x2c\xc9\x94\x13\x5d\x0c\x99\x35\x37\x5f\xa2\x61\x05\x5f\x51\xc6\xda\x16\x78\xe3\x50\x5a\x23\x49\xe1\xe5\x06\x9a\xa6\x2f\xad\xdb\xf5\x50\x51\x6f\x07\x0d\xa8\x1a\xbf\x3a\xab\x87\x7b\x7b\x22\x54\xc5\x06\x9f\x86\xd5\x53\x7d\x0d\xbc\x4f\xdb\xd0\x4e\x82\x6b\x21\x82\xe7\x6b\x8d\x55\xb5\xc6\x45\xc8\xae\xbf\xa6\xa1\x43\xbd\xb2\x64\x38\x2e\xc8\xf5\xb0\xdb\x46\x87\x3b\x7e\x0b\x64\xef\xb3\x87\xdd\x66\xb5\x7a\x38\xb6\xf6\x2a\xe4\xa4\xb2\x85\xbf\x9a\x70\xb6\x82\xf2\x14\x9a\x5b\x2a\xc8\xa1\x0c\x7f\xce\xe9\xef\xe8\x5c\x45\xff\x03\x1e\x7b\xeb\x3b\x12\xfd\xd8\xff\x0b\x29\x3e\x54\x98\x8a\x59\x4b\xc3\xba\xc3\xca\xdd\x39\x04\xc6\x3f\x01\x00\x00\xff\xff\xa4\xf2\xfd\xfe\x0b\x05\x00\x00")

func assetsCsiReconcilerYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiReconcilerYaml,
		"assets/csi-reconciler.yaml",
	)
}

func assetsCsiReconcilerYaml() (*asset, error) {
	bytes, err := assetsCsiReconcilerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-reconciler.yaml", size: 1291, mode: os.FileMode(420), modTime: time.Unix(1615657258, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x3f\x0b\xc2\x30\x10\x47\xf7\x7c\x8a\xdf\xe0\x9a\xa1\xfe\x59\xb2\x15\xe9\xa8\x08\x05\xf7\x33\x3d\x30\xd8\x34\x47\x2e\x16\x44\xfc\xee\x52\xcd\x26\xae\xef\xdd\x3b\x7e\xb7\x30\x0d\x0e\x3d\xe7\x39\x78\x36\x24\xe1\xcc\x59\x43\x9a\x1c\xe6\xc6\x44\x2e\x34\x50\x21\x67\x80\x89\x22\x3b\x78\x0d\x36\x5f\xa3\xf5\x49\xad\x6a\xc5\x2a\xe4\xd9\x61\xf5\x3c\xb6\x87\xae\x3f\xb5\xfb\xee\x65\x80\x91\x2e\x3c\xea\x92\x02\x24\xf2\xd3\xaa\xb0\x5f\xac\xf2\xc8\xbe\xa4\xfc\xff\x12\x90\x94\x4b\x7d\x65\xeb\x92\xe1\x1e\xe3\xe3\x43\xbe\xda\xa1\x59\x6f\xb6\xbb\x77\x00\x00\x00\xff\xff\x69\x52\x69\x54\xd0\x00\x00\x00")

func assetsCsiServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiServiceYaml,
		"assets/csi-service.yaml",
	)
}

func assetsCsiServiceYaml() (*asset, error) {
	bytes, err := assetsCsiServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-service.yaml", size: 208, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiUnitTest2Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xce\xcc\x4b\xb1\x52\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\xe5\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x28\x49\x2d\x2e\x01\x04\x00\x00\xff\xff\xff\x0b\x62\x79\x35\x00\x00\x00")

func assetsCsiUnitTest2YamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiUnitTest2Yaml,
		"assets/csi-unit-test-2.yaml",
	)
}

func assetsCsiUnitTest2Yaml() (*asset, error) {
	bytes, err := assetsCsiUnitTest2YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-unit-test-2.yaml", size: 53, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiUnitTestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x0a\xc2\x30\x10\xc7\xf7\x3c\xc5\x0d\xae\x19\xea\xc7\x92\xad\x48\x47\x45\x28\xba\x1f\x97\x03\x83\x26\x39\x72\x69\x41\xc4\x77\x97\xd8\x8e\x6e\xc7\xef\xfe\x5f\x8f\x90\xbc\x83\x6b\xd2\x49\x24\x97\xca\x7e\xe4\x32\x07\x62\x83\x12\x6e\x5c\x34\xe4\xe4\x60\xee\x4c\xe4\x8a\x1e\x2b\x3a\x03\x90\x30\xb2\x03\xd2\x60\xcb\x3d\x5a\xca\x6a\x55\x57\xac\x82\xc4\x0e\x36\xef\x73\x7f\x1a\xc6\x4b\x7f\x1c\x3e\x46\x85\xa9\xd9\x94\x9f\x4c\x35\x97\x76\x03\xa0\xc8\x9f\x8c\xb6\x41\x17\x81\x5d\x7b\xfc\x14\xe3\xeb\x47\x96\xb7\x83\x6e\xbb\xdb\x1f\xbe\x01\x00\x00\xff\xff\xf3\x48\xb7\x42\xb9\x00\x00\x00")

func assetsCsiUnitTestYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiUnitTestYaml,
		"assets/csi-unit-test.yaml",
	)
}

func assetsCsiUnitTestYaml() (*asset, error) {
	bytes, err := assetsCsiUnitTestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-unit-test.yaml", size: 185, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiWebhookYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4d\xcb\xdc\x30\x0c\x84\xef\xf9\x15\xe2\xbd\x3b\x4b\x6e\xc5\xf0\x1e\xda\x65\x29\x3d\x14\x4a\x29\xed\x59\xeb\x28\x89\x9a\xd8\x32\xb2\x93\xd2\x7f\x5f\xf2\xb9\x1f\x94\xbd\x59\x93\x19\xeb\x19\x62\x8c\xfc\x93\x34\xb1\x04\x0b\x58\x7b\x4e\xf3\x51\xa9\xe5\x94\x15\x33\x4b\x28\xfb\x0f\xa9\x64\x39\x4d\xd5\x95\x32\x56\x45\xcf\xa1\xb6\xf0\x75\xcc\x98\x39\xb4\xbf\xe8\xda\x89\xf4\x67\x09\x0d\xb7\xe3\x9a\x28\x3c\x65\xac\x31\xa3\x2d\x00\x30\x04\xc9\x8b\x9c\xe6\x11\xc0\x91\x66\xe3\x31\x60\x4b\x3a\xdf\xcb\xe1\x37\xb9\x6c\x1c\x9a\x46\xc5\x5b\x90\x48\x21\x75\xdc\x64\xa3\x54\x77\x38\x7b\xb5\xa7\x1c\x07\x74\x74\xba\x3b\x9b\x79\x43\xa2\x6c\x12\xe9\xc4\xa1\x35\xf3\xc5\x05\x40\x40\x4f\x16\xfe\x67\xf4\x1b\xb3\xf9\xb3\x42\x1b\xf7\x40\xbd\xa9\x0b\xa6\x01\x37\x30\x85\xbc\xf6\x5a\xc1\x01\x1c\x7e\x1a\x43\x3d\x90\x85\x73\xfb\xfe\xbe\x89\xcb\x7a\x47\xbb\xe7\x15\xc0\xbe\x77\x8b\x3c\x24\x52\x44\x47\xaf\xdb\x1f\xfe\x88\xb9\xb3\x70\xd2\xce\x1b\x97\x78\xed\x45\x66\xaa\x4c\x94\x7a\x31\x35\xc8\xc3\xa8\xf4\x4d\x06\x76\x7f\x2d\x7c\x69\x83\xe8\x1a\x5f\xe1\x36\x90\xd2\x25\x2e\xb5\xf3\xcb\x17\x1d\x07\x4a\x7b\x0b\x03\x18\xf9\xb3\xca\x18\xd3\xad\xd8\x2c\xbf\xbd\x1d\xe3\xed\xe5\x3c\x79\xa6\xea\x18\x25\x92\xde\xff\xfc\xdd\x72\xfe\x7e\xf9\xf8\xe3\x72\x48\x4a\x49\x46\x75\xf4\xe4\x8a\x52\xa7\x7f\x01\x00\x00\xff\xff\x23\x0f\x65\x1d\xa0\x02\x00\x00")

func assetsCsiWebhookYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiWebhookYaml,
		"assets/csi-webhook.yaml",
	)
}

func assetsCsiWebhookYaml() (*asset, error) {
	bytes, err := assetsCsiWebhookYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-webhook.yaml", size: 672, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsDatasetPvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\xab\xfb\x1d\x62\x60\xc9\xda\x81\xa9\x80\x18\xba\xbb\x8e\x45\xad\x26\xf6\x11\x3b\x95\xfa\xef\x51\xd0\x89\x81\xc9\xfa\xac\xef\x3d\x3d\xdc\xe4\xcc\xdd\xc5\x34\xc3\xfd\x39\xdd\x44\x4b\x86\x8f\xf9\xf1\x60\x8d\xb3\xd5\xd1\xf8\x58\x51\x5a\x6a\x1c\x58\x30\x30\x27\x00\xc5\xc6\x19\xc8\x65\xe9\xd7\xb6\x90\xf9\xb2\xdd\x29\x01\xa0\xaa\x05\x86\x98\xfa\xd4\x60\x2a\x6b\xbf\xb6\x95\xcc\x57\xb9\xcc\xdb\x9e\x2e\x83\x6e\x1c\x9e\xe1\x80\xb5\x1e\x92\x6f\x4c\x53\x46\x22\x76\x3f\x59\xe1\xdf\xec\x02\x9f\x8c\xe5\x5d\xeb\xe3\x84\xfa\x48\x00\x9d\xdd\x46\x27\xde\x9b\x3b\x7f\x0f\xf6\xd8\x09\xc0\xc3\x3a\x7e\x71\x86\x97\x57\x49\x7f\x78\xac\xe8\xfe\xf6\x7f\xed\x4f\x00\x00\x00\xff\xff\x3e\x8e\xeb\xd4\xf6\x00\x00\x00")

func assetsDatasetPvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsDatasetPvcYaml,
		"assets/dataset-pvc.yaml",
	)
}

func assetsDatasetPvcYaml() (*asset, error) {
	bytes, err := assetsDatasetPvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/dataset-pvc.yaml", size: 246, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\xb1\x4a\x04\x41\x0c\x06\xe0\x7e\x9e\x22\x85\xed\xac\xd8\xc9\x74\xeb\x71\x58\x29\x72\x07\xf6\xd9\x6c\xf4\xe2\xed\x4e\x96\x64\xe6\x0a\xc5\x77\x97\x61\xc5\xc6\x45\xec\x86\x21\x7c\xff\x9f\x9c\x25\x8f\x09\x76\x53\xf5\xc2\x76\xd0\x89\xef\x24\x8f\x92\x5f\x03\x2e\xf2\xcc\xe6\xa2\x39\x81\x0d\x48\x1d\xd6\x72\x52\x93\x77\x2c\xa2\xb9\x3b\xdf\x7a\x27\x7a\x7d\xb9\x09\x33\x17\x1c\xb1\x60\x0a\x00\x19\x67\x4e\x40\x2e\xd1\x4e\x73\x24\xf5\xd8\xde\xb4\xea\xd1\x74\xe2\x38\x7c\xfb\xeb\xb0\x2f\x48\x9c\xe0\xea\xe3\xb1\x7f\xd8\x1f\x9f\xfa\xdd\xfe\x33\x78\x1d\xde\x98\x8a\x37\x30\xc2\x5a\xf0\xc8\x76\x11\xe2\x9e\x48\x6b\x2e\x01\x60\x23\xeb\xe7\x77\x0b\x6d\xd9\x07\x7e\x69\xe6\xaf\x95\xff\x55\x3c\x00\xe0\x22\xf7\xa6\x75\xf9\xe3\x20\x5f\x01\x00\x00\xff\xff\xe9\xe7\x0b\xcc\x4f\x01\x00\x00")

func assetsRbacCsiClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiClusterRoleBindingYaml,
		"assets/rbac-csi-cluster-role-binding.yaml",
	)
}

func assetsRbacCsiClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacCsiClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-cluster-role-binding.yaml", size: 335, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xcf\x8e\xd4\x3c\x10\xc4\xef\x79\x0a\x2b\xfa\x8e\x5f\xb2\xe2\x86\x72\x5b\xad\x56\x9c\x58\x21\x90\xb8\x20\x0e\xbd\x9d\x66\x6c\x8d\x63\x5b\xdd\xed\xf0\x4f\xbc\x3b\x72\x12\x10\x33\xe3\x59\x86\x81\x53\x5a\x56\xe9\x57\x55\x6e\x67\xef\xc2\x38\x98\x3b\x9f\x45\x89\x5f\x47\x4f\x0d\x24\xf7\x96\x58\x5c\x0c\x83\xe1\x47\xc0\x1e\xb2\xda\xc8\xee\x0b\xa8\x8b\xa1\xdf\x3f\x97\xde\xc5\x9b\xf9\x59\x33\x91\xc2\x08\x0a\x43\x63\x4c\x80\x89\x06\x83\xe2\x3a\xb6\x53\x87\x51\xba\x32\xe3\x8a\xed\xb8\x70\x57\x91\x24\x40\x1a\xcc\x7f\x5f\x1f\x6e\x5f\xde\xbf\x79\x75\x7b\x77\xff\xad\xe1\xec\x49\x0a\xa5\x33\x90\xdc\x0b\x8e\x39\xc9\x60\xde\xb5\xed\xfb\xc6\x18\x63\x98\x24\x66\x46\x5a\xce\x52\x89\x26\x4a\x41\xe7\xe8\xf3\x44\xb2\x89\x66\xe2\xc7\x45\xb0\x23\x6d\xff\x37\xad\x77\xb2\x7c\x3f\x82\xa2\x2d\x43\xfa\x31\x20\x13\x28\x95\x29\xa7\x71\x9b\x46\xf2\xa4\xb4\xa0\xae\xc8\x80\x1e\xdc\x74\x71\x90\xcd\xb5\xe2\x25\x1a\x19\x76\xb4\x5d\x71\xcd\x79\x53\xa0\x07\x91\x0b\xab\x5f\xd8\x29\xc4\xf1\x7a\xe0\xef\x83\xa3\xb8\xbf\x72\xa8\x31\x69\xa6\xa0\x27\xc4\x93\xfb\xae\xed\x3b\x5d\xdf\x64\x5d\x39\xa8\x02\xda\xa9\x16\xe0\xe9\x07\x78\xea\x69\x5a\x21\xcc\xec\xf4\x73\x1f\x13\x05\xb1\xee\x83\x16\x6f\x73\x68\xfe\x50\x7e\x9e\x45\x9e\xd8\xcd\xce\xd3\x8e\xc6\x63\xcd\x21\x0e\x63\x50\xfa\xa4\x18\x83\x28\x83\x2b\x51\xcd\x61\x56\xd3\x66\xa1\xf5\xf0\x38\x53\x1d\x9d\xe2\x58\x81\x1c\x35\x5e\x8b\xfe\x21\xf5\x46\x14\x34\xd7\x12\xae\x4b\xab\xe0\xda\x09\x78\x4f\x9a\x3c\x20\xf5\x4c\xa3\x05\xed\x31\x4e\xb5\xa5\xfd\xa2\x1c\xd9\xcd\xc4\x96\xc0\xab\x45\x4b\xb8\x3f\xb7\xc0\x9f\x8b\x5b\x7a\xd5\xda\x9c\xf1\xaf\x76\x7c\x32\xc1\xd9\xf2\x5b\x94\x7f\x7e\x07\xa0\x20\x74\xf6\xe9\x1e\x37\xff\x1e\x00\x00\xff\xff\x0a\x55\xee\xd1\x24\x06\x00\x00")

func assetsRbacCsiClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiClusterRoleYaml,
		"assets/rbac-csi-cluster-role.yaml",
	)
}

func assetsRbacCsiClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRbacCsiClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-cluster-role.yaml", size: 1572, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xbd\x4a\xc5\x40\x10\x85\xfb\x7d\x8a\x29\x6c\x37\x62\x27\xdb\x45\x09\x56\x8a\x24\x60\x3f\x99\x8c\x66\x4c\xb2\xb3\xec\x4f\x0a\xc5\x77\x97\x18\xb9\xb7\x09\xe9\x86\xe1\xf0\x7d\x87\x83\x41\xde\x38\x26\x51\xef\x20\xf6\x48\x15\x96\x3c\x6a\x94\x2f\xcc\xa2\xbe\x9a\xee\x53\x25\x7a\xbb\xde\x99\x49\xfc\xe0\xa0\xd5\x99\x1f\xc4\x0f\xe2\x3f\xcc\xc2\x19\x07\xcc\xe8\x0c\x80\xc7\x85\x1d\x50\x12\x1b\xc7\xc5\x92\x26\xfb\x77\xeb\xcc\xb6\xff\x8f\xef\xa1\x14\x90\xd8\xc1\xcd\xf7\x4b\xfd\xdc\x74\xaf\xf5\x63\xf3\x63\x52\xe9\x3f\x99\x72\xda\x40\x16\x76\x51\xc7\x71\x15\xe2\x9a\x48\x8b\xcf\x06\xe0\xc0\x71\xf9\x1e\x41\x37\x77\xcb\xef\x1b\xf3\x5a\xfd\xb4\xa9\x01\xc0\x20\x4f\x51\x4b\x38\xd9\xe2\x37\x00\x00\xff\xff\x04\x9e\x6b\x4c\x31\x01\x00\x00")

func assetsRbacCsiRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiRoleBindingYaml,
		"assets/rbac-csi-role-binding.yaml",
	)
}

func assetsRbacCsiRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacCsiRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-role-binding.yaml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\x31\x4b\x04\x41\x0c\x85\xfb\xf9\x15\x61\xb1\xdd\x11\x3b\x99\xee\x90\xc3\x4a\x11\x05\x1b\xb9\x22\x97\x0d\x6e\xd8\x9d\xcd\x90\xcc\x6e\xa1\xf8\xdf\xe5\x46\xaf\x38\xae\x0b\xdf\xfb\xf2\x1e\x16\x79\x67\x73\xd1\x25\x81\x1d\x91\x22\xae\x75\x54\x93\x2f\xac\xa2\x4b\x9c\xee\x3d\x8a\xde\x6e\x77\x61\x92\x65\x48\xf0\xaa\x33\x87\xcc\x15\x07\xac\x98\x02\xc0\x82\x99\x13\x90\x4b\x6f\x63\xee\x49\xbd\x6f\xf7\x49\xfb\x0b\xbd\x20\x71\x82\x9b\xef\xe7\xdd\xd3\xfe\xed\x65\xf7\xb0\xff\x09\xb6\xce\xec\xa7\xef\x1e\xb0\xc8\xa3\xe9\x5a\x3c\xc1\x47\xd7\x1d\x02\x00\x80\xb1\xeb\x6a\xc4\x8d\x39\x93\x71\xf5\xff\x68\x63\x3b\x36\xfc\xc9\xb5\xa1\xcb\x06\xe8\x32\xda\xc4\xb5\xcc\x48\x1c\x8d\x87\x11\x6b\x24\xcd\x1d\x5c\x37\x5f\xb8\xe4\x32\x98\x6c\x6c\x7e\x56\xcf\x4b\xd0\xa6\xe0\xf0\x1b\x00\x00\xff\xff\x10\x7f\x44\xe3\x29\x01\x00\x00")

func assetsRbacCsiRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiRoleYaml,
		"assets/rbac-csi-role.yaml",
	)
}

func assetsRbacCsiRoleYaml() (*asset, error) {
	bytes, err := assetsRbacCsiRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-role.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmDatasetClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\x4e\x03\x31\x0c\x40\xf7\x7c\x85\x07\xd6\x1c\x62\x43\xd9\x8e\xaa\x62\x02\xa1\x56\x62\xf7\xe5\x5c\x30\x97\x8b\x23\xc7\xe9\x00\xe2\xdf\x51\xd4\x22\x06\x10\x52\xd7\xc4\xef\xf9\x19\x0b\x3f\x93\x56\x96\x1c\x40\x27\x8c\x03\x36\x7b\x15\xe5\x77\x34\x96\x3c\x2c\xb7\x75\x60\xb9\x3e\xde\xb8\x85\xf3\x1c\x60\x93\x5a\x35\xd2\x9d\x24\xba\xe3\x3c\x73\x7e\x71\x2b\x19\xce\x68\x18\x1c\x40\xc6\x95\x02\x48\x5a\xfd\x8a\xba\x90\x95\x84\x91\x7c\xff\xad\x64\x3e\x9e\x60\xaf\x92\xc8\x4f\x67\xfc\x04\xd5\x82\x91\x02\x5c\x7d\x3c\x8e\x0f\xdb\xfd\xd3\xb8\xd9\x7e\xba\x3e\xb6\xa3\x43\xf7\x62\xe1\x7b\x95\x56\xfe\x69\x74\x00\xbf\x12\x2f\x2a\x72\xb5\x4d\x6f\x14\xad\xf6\x85\xfe\x2c\xdb\x93\x1e\x39\xd2\x18\xa3\xb4\x6c\x0e\xe0\xdb\x38\xd3\x01\x5b\xfa\x79\xf9\xe3\x80\xaf\x00\x00\x00\xff\xff\x0a\xd3\xe7\x6d\x5b\x01\x00\x00")

func assetsRbacOlmDatasetClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmDatasetClusterRoleBindingYaml,
		"assets/rbac-olm-dataset-cluster-role-binding.yaml",
	)
}

func assetsRbacOlmDatasetClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacOlmDatasetClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-dataset-cluster-role-binding.yaml", size: 347, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmDatasetClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xcd\x6e\xdb\x4c\x0c\xbc\xfb\x29\x84\xe0\xbb\xda\xc1\x77\x2b\x7c\x0b\x82\xa0\x97\xb6\x28\x52\xb4\x77\x9a\xa2\x2d\xd6\xfb\x07\x92\xab\xf4\x07\x7d\xf7\x42\x96\x13\x2b\xad\xd7\x95\x51\xc7\x4d\x6e\x36\x97\xdc\x19\xce\x72\x57\x03\x89\x3f\x91\x28\xc7\x30\xaf\x64\x01\x38\x83\x6c\x4d\x14\xfe\x06\xc6\x31\xcc\xd6\xaf\x74\xc6\xf1\xb2\xfd\x7f\xb2\xe6\x50\xcf\xab\x6b\x97\xd5\x48\x6e\xa3\xa3\x89\x27\x83\x1a\x0c\xe6\x93\xaa\x0a\xe0\x69\x5e\x45\xe7\xa7\x1e\x64\x4d\x96\x1c\x20\x4d\xbb\x55\x25\x9b\x62\x5f\x35\x95\xae\xac\x4f\xd6\x04\x48\xf3\xea\xbf\xef\xef\xae\xde\xde\x7c\x78\x7f\x75\x7d\xf3\x63\x22\xd9\x91\x76\xbb\x4d\x2b\x48\xfc\x5a\x62\x4e\x9b\xbf\x9b\x40\xb6\x86\x82\x31\x0e\x79\x6d\xd6\x84\x34\x66\x41\xda\xa6\x76\xc9\x16\xd7\x14\x84\x5a\xa6\x3b\xdd\x04\x5b\x92\xc5\x60\x1d\x85\xc0\x68\x1f\xd0\x3d\xd4\xaf\x0a\x94\x90\x34\x2f\x3e\x13\x1a\x20\x92\xea\x38\xc4\x10\xc3\xed\x76\xa3\x8f\xb7\x6f\x06\x39\x97\x9e\x4c\x18\xf7\xd6\xaf\xc8\x8a\x74\x6b\xcf\xda\x1d\xa0\xd0\x8a\xd5\x64\x0c\x6d\x9f\x0d\x8c\xc3\xea\x8e\x16\x4d\x8c\x6b\x8c\x61\xc9\xab\xdc\x97\x1e\xe6\x3f\xa4\xd3\xff\x76\xac\xbb\x3f\x39\xd5\xc3\xbc\x3b\x30\x6c\x8a\xc4\x53\xd2\x12\xc1\x1a\xc8\xc7\xa0\x64\xba\x93\xda\xc0\x68\x99\xdd\x43\xf0\x0c\x14\x7b\x61\x66\x31\x51\xd0\x86\x97\x76\x40\x52\x0e\x4b\x01\x35\xc9\x68\x59\xe8\xd8\x43\xbc\xb8\x28\xed\xdb\x53\xf0\x90\x76\x4a\x3c\xdc\x9f\x41\x28\xd6\x87\x30\xf7\xc8\x70\xb0\xef\x32\x1d\x6a\x29\x8c\xd2\xff\x11\x58\xda\x82\x1d\x7f\x02\x65\x26\xa9\x7b\xb6\xd4\x28\x58\x1b\x5d\xf6\x84\x0e\xd8\x8f\x61\x56\x93\xa3\x53\x0f\xca\x78\x9a\xa7\x64\xf8\x24\xb2\xc6\xfa\xb8\x41\x7a\x4c\xe2\x2f\x50\x2f\xbb\x1b\x9e\xf7\x82\x3f\xb4\x76\xe4\xb6\x4a\x28\x85\xe7\xe2\xd4\x17\x43\x49\x5a\x46\x02\xc4\x98\xc3\xf0\xd9\xea\xe3\xff\x6a\x30\x07\x9f\xe3\x99\x50\xdd\x80\xcd\x30\xfa\xe2\x77\x61\x97\x8d\xca\xb5\x70\x4b\xf2\x3c\x06\xf6\x04\x7d\x1c\x98\xaf\x21\xe1\x02\xc7\xd3\xb2\xda\x3a\xa3\x17\xae\xed\x7d\x17\xcf\x4a\xd9\xcd\x61\x37\x04\xce\x1a\x6c\x08\xd7\x2f\x5d\xe3\xdf\xfa\x79\x02\xb5\x8b\xce\xbf\xe8\x4a\x7a\x47\xdf\x19\xfa\x05\x87\x9a\xc3\x4a\xf7\xad\xed\x82\x7b\x33\x77\x29\x67\xf0\x72\x4a\x98\x85\xed\xeb\x28\x37\x77\x9f\x8c\x31\x18\x7d\x31\x8c\xa1\x73\xd6\x5c\xb0\x3e\x59\x8b\xca\xaa\x45\x81\x15\xfd\x49\xce\xc7\x8f\xed\xa0\x10\x1d\xa8\x9e\x51\xa4\xb1\x74\x4f\x6c\x38\xc7\xe1\xf6\x0e\x0a\xcc\x00\x1b\x5f\xf2\xa1\xc7\x18\x95\x9f\x01\x00\x00\xff\xff\xf2\xa1\xd4\xd8\xfe\x0e\x00\x00")

func assetsRbacOlmDatasetClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmDatasetClusterRoleYaml,
		"assets/rbac-olm-dataset-cluster-role.yaml",
	)
}

func assetsRbacOlmDatasetClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRbacOlmDatasetClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-dataset-cluster-role.yaml", size: 3838, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmLeaderRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\xbb\x4e\x2b\x31\x10\x06\xe0\xde\x4f\x31\xc5\x69\xbd\x47\x74\xc8\xdd\x82\x22\x2a\x10\x4a\x24\xfa\x59\xfb\x0f\x0c\xeb\xf5\x58\xbe\xa4\x00\xf1\xee\xc8\x22\x28\x0d\xa2\xa0\x9d\xcb\x37\xff\x70\x96\x27\x94\x2a\x9a\x1c\x95\x85\xfd\xc4\xbd\xbd\x68\x91\x37\x6e\xa2\x69\x5a\xaf\xeb\x24\xfa\xff\x74\x65\x56\x49\xc1\xd1\x5e\x23\x6e\x24\x05\x49\xcf\x66\x43\xe3\xc0\x8d\x9d\x21\x4a\xbc\xc1\x91\xc6\xcd\x6e\x5c\x56\xb4\x1c\xd9\xc3\x8e\x6e\x45\xb3\x11\x1c\x50\x2c\x22\xfc\x50\x6d\xd1\x08\xbb\x9c\x99\xaf\xe5\x9a\xd9\xc3\xd1\xbf\xf7\x87\xf9\x7e\x77\x78\x9c\x6f\x77\x1f\x66\x8c\xed\x71\x1c\x3e\x67\xb9\x2b\xda\xf3\x2f\x21\x0d\xd1\x25\xe3\x9f\x22\x99\xda\x97\x57\xf8\x56\xc7\x45\x7b\xd6\x0e\x28\x27\xf1\x98\xbd\xd7\x9e\x9a\x21\xfa\x96\x03\x8e\xdc\xe3\xa5\xf2\xc3\x07\x9f\x01\x00\x00\xff\xff\x18\xab\xa1\x74\x5d\x01\x00\x00")

func assetsRbacOlmLeaderRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmLeaderRoleBindingYaml,
		"assets/rbac-olm-leader-role-binding.yaml",
	)
}

func assetsRbacOlmLeaderRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacOlmLeaderRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-leader-role-binding.yaml", size: 349, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmLeaderRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x4f\x4b\x03\x31\x10\xc5\xef\xfb\x29\x42\xf1\x9a\x2d\xde\x64\x6f\x45\x8a\x27\x45\x14\xbc\x4f\xb3\xcf\x36\x6c\xfe\x31\x99\xac\xa0\xf8\xdd\x25\x11\xda\x55\x14\xb1\x39\xcd\xcb\xcb\xfc\xde\x0b\x25\xfb\x04\xce\x36\x86\x41\xf1\x8e\x4c\x4f\x45\x0e\x91\xed\x2b\x89\x8d\xa1\x9f\xae\x72\x6f\xe3\x7a\xbe\xec\x26\x1b\xc6\x41\x3d\x44\x87\xce\x43\x68\x24\xa1\xa1\x53\x2a\x90\xc7\xa0\xa2\xf3\xda\x13\x4f\x90\xe4\xc8\x40\x57\x37\x43\xb4\x03\x8d\x60\x0d\x07\x53\x71\x9a\xeb\xfa\xe7\x52\x4e\x64\x30\xa8\x8b\xb7\xbb\xcd\xed\xf6\xf1\x7e\x73\xbd\x7d\xef\xb8\x38\xe4\x4a\xd5\x8a\x92\xbd\xe1\x58\x52\x93\xf5\x68\xb5\x5a\xb5\x91\x91\x63\x61\x83\x85\x63\x62\x78\xb6\x7b\x4f\x29\xb7\xab\x19\xbc\x5b\xb8\x7b\xc8\x71\x76\x36\x9f\xc4\x0b\x89\x39\x9c\x20\x0c\x12\x1c\x65\x49\xe3\x52\xa6\x2f\x6f\x47\x38\x34\xf3\xec\xa2\xeb\x2c\x24\xe5\xcf\xbe\xbf\xb4\xf8\x67\x2c\x66\x04\xf9\x31\xeb\xdb\xa7\x1b\xff\x23\x00\x00\xff\xff\x5f\x97\xd0\xe4\x13\x02\x00\x00")

func assetsRbacOlmLeaderRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmLeaderRoleYaml,
		"assets/rbac-olm-leader-role.yaml",
	)
}

func assetsRbacOlmLeaderRoleYaml() (*asset, error) {
	bytes, err := assetsRbacOlmLeaderRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-leader-role.yaml", size: 531, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x2a\xcb\x4c\x4e\x75\x4c\x4e\xce\x2f\xcd\x2b\xe1\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x48\x2e\xce\xd4\x2d\xca\xc8\xd5\x4d\xce\x2f\x86\x8a\x15\x17\x24\x26\xa7\x5a\x29\xa8\x54\xfb\x39\xfa\xba\x06\x07\x38\x3a\xbb\xd6\x02\x02\x00\x00\xff\xff\x14\xe2\x78\xcd\x5b\x00\x00\x00")

func assetsRbacServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacServiceAccountYaml,
		"assets/rbac-service-account.yaml",
	)
}

func assetsRbacServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRbacServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-service-account.yaml", size: 91, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStorageClassYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcb\x31\x0e\xc2\x30\x0c\x46\xe1\x3d\xa7\xf0\x05\x6a\xd4\x0d\x65\xe5\x08\x48\xec\x6e\x6a\x51\xab\x38\xae\xfc\x47\x3d\x3f\x2a\x4c\x6f\xf8\xf4\x76\xeb\x6b\xa5\xe7\x88\x94\xb7\x3e\x3e\x02\x14\x39\xec\xa5\x09\x8b\x5e\x09\x7f\xe0\xfd\x0e\xb6\xb8\x9d\xf3\xa2\x43\xe6\xe2\x3a\x64\x95\x21\xb5\x10\x75\x71\xad\xd4\x60\x53\x6e\x3e\xb5\x40\x39\x32\x4e\xbb\x7e\xcd\x1f\x70\x6e\xce\x2d\xc0\xb6\x5c\xf5\x6f\x00\x00\x00\xff\xff\x01\x9e\xa6\xbc\x74\x00\x00\x00")

func assetsStorageClassYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsStorageClassYaml,
		"assets/storage-class.yaml",
	)
}

func assetsStorageClassYaml() (*asset, error) {
	bytes, err := assetsStorageClassYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/storage-class.yaml", size: 116, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/csi-controller-service.yaml":                assetsCsiControllerServiceYaml,
	"assets/csi-driver.yaml":                            assetsCsiDriverYaml,
	"assets/csi-node-service.yaml":                      assetsCsiNodeServiceYaml,
	"assets/csi-reconciler.yaml":                        assetsCsiReconcilerYaml,
	"assets/csi-service.yaml":                           assetsCsiServiceYaml,
	"assets/csi-unit-test-2.yaml":                       assetsCsiUnitTest2Yaml,
	"assets/csi-unit-test.yaml":                         assetsCsiUnitTestYaml,
	"assets/csi-webhook.yaml":                           assetsCsiWebhookYaml,
	"assets/dataset-pvc.yaml":                           assetsDatasetPvcYaml,
	"assets/rbac-csi-cluster-role-binding.yaml":         assetsRbacCsiClusterRoleBindingYaml,
	"assets/rbac-csi-cluster-role.yaml":                 assetsRbacCsiClusterRoleYaml,
	"assets/rbac-csi-role-binding.yaml":                 assetsRbacCsiRoleBindingYaml,
	"assets/rbac-csi-role.yaml":                         assetsRbacCsiRoleYaml,
	"assets/rbac-olm-dataset-cluster-role-binding.yaml": assetsRbacOlmDatasetClusterRoleBindingYaml,
	"assets/rbac-olm-dataset-cluster-role.yaml":         assetsRbacOlmDatasetClusterRoleYaml,
	"assets/rbac-olm-leader-role-binding.yaml":          assetsRbacOlmLeaderRoleBindingYaml,
	"assets/rbac-olm-leader-role.yaml":                  assetsRbacOlmLeaderRoleYaml,
	"assets/rbac-service-account.yaml":                  assetsRbacServiceAccountYaml,
	"assets/storage-class.yaml":                         assetsStorageClassYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"csi-controller-service.yaml":                &bintree{assetsCsiControllerServiceYaml, map[string]*bintree{}},
		"csi-driver.yaml":                            &bintree{assetsCsiDriverYaml, map[string]*bintree{}},
		"csi-node-service.yaml":                      &bintree{assetsCsiNodeServiceYaml, map[string]*bintree{}},
		"csi-reconciler.yaml":                        &bintree{assetsCsiReconcilerYaml, map[string]*bintree{}},
		"csi-service.yaml":                           &bintree{assetsCsiServiceYaml, map[string]*bintree{}},
		"csi-unit-test-2.yaml":                       &bintree{assetsCsiUnitTest2Yaml, map[string]*bintree{}},
		"csi-unit-test.yaml":                         &bintree{assetsCsiUnitTestYaml, map[string]*bintree{}},
		"csi-webhook.yaml":                           &bintree{assetsCsiWebhookYaml, map[string]*bintree{}},
		"dataset-pvc.yaml":                           &bintree{assetsDatasetPvcYaml, map[string]*bintree{}},
		"rbac-csi-cluster-role-binding.yaml":         &bintree{assetsRbacCsiClusterRoleBindingYaml, map[string]*bintree{}},
		"rbac-csi-cluster-role.yaml":                 &bintree{assetsRbacCsiClusterRoleYaml, map[string]*bintree{}},
		"rbac-csi-role-binding.yaml":                 &bintree{assetsRbacCsiRoleBindingYaml, map[string]*bintree{}},
		"rbac-csi-role.yaml":                         &bintree{assetsRbacCsiRoleYaml, map[string]*bintree{}},
		"rbac-olm-dataset-cluster-role-binding.yaml": &bintree{assetsRbacOlmDatasetClusterRoleBindingYaml, map[string]*bintree{}},
		"rbac-olm-dataset-cluster-role.yaml":         &bintree{assetsRbacOlmDatasetClusterRoleYaml, map[string]*bintree{}},
		"rbac-olm-leader-role-binding.yaml":          &bintree{assetsRbacOlmLeaderRoleBindingYaml, map[string]*bintree{}},
		"rbac-olm-leader-role.yaml":                  &bintree{assetsRbacOlmLeaderRoleYaml, map[string]*bintree{}},
		"rbac-service-account.yaml":                  &bintree{assetsRbacServiceAccountYaml, map[string]*bintree{}},
		"storage-class.yaml":                         &bintree{assetsStorageClassYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
