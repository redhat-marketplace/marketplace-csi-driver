// Code generated for package assets by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/csi-controller-service.yaml
// assets/csi-driver-env.yaml
// assets/csi-driver.yaml
// assets/csi-node-service.yaml
// assets/csi-reconciler.yaml
// assets/csi-service.yaml
// assets/csi-unit-test-2.yaml
// assets/csi-unit-test.yaml
// assets/csi-webhook.yaml
// assets/dataset-pvc.yaml
// assets/rbac-csi-cluster-role-binding.yaml
// assets/rbac-csi-cluster-role.yaml
// assets/rbac-csi-role-binding.yaml
// assets/rbac-csi-role.yaml
// assets/rbac-olm-dataset-cluster-role-binding.yaml
// assets/rbac-olm-dataset-cluster-role.yaml
// assets/rbac-olm-leader-role-binding.yaml
// assets/rbac-olm-leader-role.yaml
// assets/rbac-service-account.yaml
// assets/storage-class.yaml
package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCsiControllerServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcd\x8a\xe3\x46\x10\xbe\xcf\x53\x34\x62\x0e\x9b\x83\xac\x2c\x6c\x08\x34\xcc\xc1\x59\x2b\xc1\x24\xf6\x1a\x8b\x0c\x84\x10\x4c\x4d\xab\x6c\x17\xd3\xea\x6e\xba\x4b\x8a\xcd\xe0\x77\x0f\x2d\xf9\x47\x5a\x7b\x13\xb3\x81\x9c\xd2\x27\x51\xaa\xfa\xaa\xbe\xfa\x7d\x25\x53\x4a\x51\x30\x30\xae\x6b\x5d\x20\x3f\x80\xa3\x67\xf4\x81\xac\x91\x02\x9c\x0b\x59\xf3\xfe\xa1\x42\x86\x12\x18\xe4\x83\x10\x06\x2a\x94\x42\x05\x4a\xfd\xb6\x4a\x95\x0d\x69\x08\x47\x71\x70\xa0\x50\x8a\xc7\xb7\xf9\x78\x96\x17\x8b\xf1\xc7\xfc\xf0\x10\x1c\xaa\x68\x16\xd0\x37\xa4\x70\x7e\xdb\xda\xa3\xd3\xa4\x20\x48\xf1\xbe\xd5\xd5\xa8\xd8\xfa\x68\x27\x44\x05\xac\xb6\xbf\xc0\x0b\xea\xd0\x09\x44\x8c\xeb\x06\x08\x63\xe5\x34\x30\x1e\xcd\x7a\x31\xc7\xa7\x07\x08\x5f\xc2\xe8\x5e\xa2\x02\x8d\x2a\xf0\xaf\xc8\x4e\x83\xc2\x91\xc7\x72\x0b\x3c\x52\xb6\xca\x4a\x4f\x0d\xfa\x63\x8a\x12\x29\x92\xc7\xb7\xc9\x72\xfa\x9c\x2f\x57\xcf\xf9\xb2\x98\x7e\x9a\x1f\x92\x16\xe7\x44\xbc\xfd\xee\xc8\x8f\x95\xb2\xb5\xe1\x81\xdb\xa3\x86\xf3\x64\x3d\xf1\xfe\xa3\x86\x10\xba\x24\x85\x7d\x60\xac\x52\x63\x4b\x4c\x95\x27\x26\x05\xfa\xa8\xad\xac\x61\x20\x83\xfe\xcc\x27\xed\xd5\x05\x98\x41\x6d\xd1\x9f\xe9\x50\x05\x1b\x94\xc2\xe3\x86\x02\xfb\xfd\x89\x0d\xd9\xcc\x3a\x34\x61\x4b\x6b\xfe\x90\xd9\x80\x69\xb4\xc6\x1d\xa3\x37\xa0\xcf\x30\xb2\xf9\x30\xfa\x7e\xf4\xed\x25\x71\x7e\xd3\x4b\x63\x2a\x92\xb4\xb5\x83\xb2\xf4\x18\xc2\xd3\xe3\xbb\xf1\x64\xb2\xcc\x8b\xe2\x9b\x64\xa8\xd4\x3c\x7d\x77\x91\xa0\x69\xfa\x18\x5d\xf0\x47\xc3\xb3\x5c\x88\x06\x74\x8d\x52\x64\x0d\xf8\x4c\xd3\x4b\xa6\x02\x65\xc1\xaa\x57\xe4\x90\x39\x5d\x6f\xc8\x38\x6f\x77\xfb\x28\x1f\x45\xf9\x90\xf2\xa2\xd6\x7a\x61\x35\xa9\xbd\x14\xd3\xf5\xdc\xf2\xc2\x63\x40\xc3\x67\xad\xc6\xea\xba\xc2\x59\x2c\x4a\xb8\x0e\xa7\x73\x94\x96\xe4\x7b\x11\x55\x51\x79\x01\xbc\xbd\x23\xaa\x1b\xb5\x71\xde\x36\x14\x3b\xe7\x5f\x97\xa7\x87\x74\x47\x85\x70\xc7\x1e\x52\xe5\x11\x18\xd3\xd3\x68\x24\xff\x57\xf1\xeb\xaa\x38\x9c\xdd\x73\x05\x2f\xab\x60\x3a\x1b\xff\x94\x1f\xe4\x17\x56\xc3\xfd\xd4\x02\xaa\xba\x5d\x0b\xd6\x30\xee\x58\xf6\x28\x80\xd6\xf6\xcf\x85\xa7\x86\x34\x6e\x30\x0f\x0a\x34\x70\xbb\xb5\xd9\xd7\xd8\x53\x74\x27\x9d\xf2\xea\x97\x02\x07\x2f\xa4\x89\x09\x43\x1f\x5b\x08\x28\x4b\x29\x7e\x4f\x8a\xdf\x8a\xd5\x78\x32\x9b\xce\x93\x3f\xfe\xae\xbb\xda\x1d\x15\xd3\xf3\xf4\xf8\xee\xe7\x5f\x7f\xc8\x57\xf3\x4f\x93\x7c\x15\xaf\xc0\xe7\xed\xd3\xb6\xb0\x29\x9d\x25\xc3\x4f\xb5\xa1\x9d\xcc\xb2\xbb\x7b\xed\x47\x6f\xab\xbe\x67\x65\xcd\x9a\x36\x33\x70\x4b\x5c\x0f\xc3\xbf\x3e\x52\x68\x9a\xff\xac\x6d\x4f\x90\xc3\x54\x7c\x8e\x3c\x64\x13\xdf\x9a\x50\x97\x57\x5c\x8e\xf2\xae\x5b\xe3\x55\x19\xc5\x74\xc7\x1b\xf1\x8f\x13\xf0\x15\x6d\x7e\xc9\xde\xd5\xe0\x74\x5e\xae\x4e\xce\x8d\x01\xc3\xca\xf1\x7e\x42\x5e\x8a\xb7\xc3\x5f\x01\x00\x00\xff\xff\xf0\x30\x6c\x33\x62\x08\x00\x00")

func assetsCsiControllerServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiControllerServiceYaml,
		"assets/csi-controller-service.yaml",
	)
}

func assetsCsiControllerServiceYaml() (*asset, error) {
	bytes, err := assetsCsiControllerServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-controller-service.yaml", size: 2146, mode: os.FileMode(420), modTime: time.Unix(1620937712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiDriverEnvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcb\xbd\x0a\x02\x31\x0c\x00\xe0\xbd\x4f\x91\xc1\xb5\x83\x6b\xb6\x52\x6f\x70\xa8\x14\x0e\xdc\x43\x2f\x6a\x38\xfb\x43\x5a\xba\x88\xef\xee\xe2\xad\x1f\x7c\xd4\xe4\xce\xda\xa5\x16\x84\x79\x36\xbb\x94\x0d\xc1\xd7\xf2\x90\x67\xa0\x66\x32\x0f\xda\x68\x10\x1a\x80\x42\x99\x11\x52\x17\xab\xaf\x6c\x53\xed\x96\xcb\xfc\x7b\x6f\x94\x18\xe1\xf4\xb9\xb9\xb0\xac\xd1\xf9\xe5\x6b\x8e\xe7\x62\x44\x08\xa4\x3b\x8f\xf6\xa6\xc4\x7e\xbd\x5e\x54\x26\xeb\x2f\x00\x00\xff\xff\xd1\x18\x09\x72\x7c\x00\x00\x00")

func assetsCsiDriverEnvYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiDriverEnvYaml,
		"assets/csi-driver-env.yaml",
	)
}

func assetsCsiDriverEnvYaml() (*asset, error) {
	bytes, err := assetsCsiDriverEnvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-driver-env.yaml", size: 124, mode: os.FileMode(420), modTime: time.Unix(1620937712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiDriverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8e\xb1\x4a\x06\x31\x10\x06\xfb\x3c\xc5\xbe\x80\x91\xbf\x93\xb4\x6a\xf1\x83\x3f\x8a\x82\xfd\x9a\x7c\xe7\x85\x4b\xb2\x71\x77\xef\xc0\xb7\x97\xb3\x9c\x61\x8a\xe1\x59\x3f\xa1\x56\x65\x24\x32\x17\xe5\x6f\xc4\xed\xc1\x62\x95\xfb\xe3\xf2\x05\xe7\x4b\xd8\xea\x28\x89\x1e\x3f\xae\x4f\x5a\x0f\x68\xe8\x70\x2e\xec\x9c\x02\xd1\xe0\x8e\x44\xd9\x6a\xec\xac\x1b\x7c\x36\xce\x88\x8a\xb2\xb2\xc7\x2c\x3d\xd8\x44\x3e\xc3\x43\xda\xde\xf1\x52\x17\xe4\xdf\xdc\x70\x93\x02\x3b\xfd\x1d\x3d\xcf\x15\x1d\xca\xed\x9f\xde\xce\x19\x73\x0c\x0f\x44\xec\xce\x79\x7d\xc7\xcf\x5e\x15\x25\xd1\xc2\xcd\x10\x88\xa6\x94\xeb\x58\xe4\x75\xdc\x64\x1f\x9e\xc8\x75\xc7\x5f\x00\x00\x00\xff\xff\x3a\xe2\x17\x5a\xc9\x00\x00\x00")

func assetsCsiDriverYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiDriverYaml,
		"assets/csi-driver.yaml",
	)
}

func assetsCsiDriverYaml() (*asset, error) {
	bytes, err := assetsCsiDriverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-driver.yaml", size: 201, mode: os.FileMode(420), modTime: time.Unix(1620937712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiNodeServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\x20\x5c\x3f\x74\x0f\xb2\x12\xac\xc5\x3a\x01\x79\x70\x63\x2f\x0b\xda\xd8\x86\x9d\x05\x18\x86\xc1\xa0\xc9\xb3\x74\x08\x45\x12\xe4\x49\x9b\x17\xe4\xbb\x0f\x94\x65\x5b\xf2\xbf\x36\x6d\x05\x18\x90\x79\xff\x8f\xf7\xfb\x9d\xb8\xc5\x47\x70\x1e\x8d\x4e\x18\xb7\xd6\xc7\xe5\xd5\xc5\x13\x6a\x99\xb0\x01\x87\xdc\xe8\x19\xd0\x45\x0e\xc4\x25\x27\x9e\x5c\x30\xa6\x79\x0e\x09\x13\x1e\x23\x97\xe5\x91\x30\x3e\x92\xbe\x3e\xf6\x96\x0b\x48\x58\xf7\x79\xd4\xbf\x1f\xce\x26\xfd\x9b\xe1\xcb\x85\xb7\x20\x82\x99\x07\x05\x82\x8c\x0b\xef\x8c\xe5\x9c\x44\xf6\x99\x2f\x40\xf9\xf5\x01\x0b\xb1\x8f\xb8\x25\xc8\xad\xe2\x04\xb5\x59\x23\x8f\xf0\xa8\x96\x87\x53\x3e\xd6\x4f\x47\x78\xec\xe5\xdc\x3d\x01\x59\xc5\x05\xf4\x1c\xc8\x8c\x53\x4f\x98\x3c\x96\x0e\x4b\x70\x75\x1b\x3a\x09\xeb\x74\x9f\x07\xd3\xbb\xc7\xe1\x74\xfe\x38\x9c\xce\xee\xc6\xa3\x97\x4e\xe5\x67\x53\x4c\xf5\x0e\xae\x44\x01\x7d\x21\x4c\xa1\xa9\x15\xb6\xd6\xb0\x0e\x8d\x43\x5a\xdd\x28\xee\xfd\xa8\x6a\x9b\x5f\x79\x82\x3c\xd2\x46\x42\x24\x1c\x12\x0a\xae\x6a\x6d\x61\x34\x71\xd4\xe0\xb6\xf5\x44\x8d\x5e\x57\x16\xeb\x34\x23\x07\x29\x7a\x72\xdc\x6d\x6b\xc3\x9c\xa7\x90\xb0\x5a\xb0\xda\x94\x86\x26\x36\x16\xb4\xcf\x70\x49\xef\x62\xe3\x21\x3a\xe9\x2a\x29\xdf\xf5\x7e\xe9\x5d\xb6\x3d\x4e\x0a\xa5\x26\x46\xa1\x58\x25\xec\x6e\x39\x32\x34\x71\xe0\x41\xd3\x56\xcb\x1a\x47\x8d\xf6\x47\xbb\x22\x26\xc6\x51\xc2\x7e\xfd\x70\xf9\x61\x2b\xdd\x8c\x4e\x06\x5c\x51\xf6\x5f\xe3\xdc\x3a\x43\x46\x18\x95\xb0\x87\x9b\xc9\xf6\x5c\x61\x09\x1a\xbc\x9f\x38\xb3\x80\xa4\xa1\xbe\xe4\xa8\x0a\x07\x0f\x99\x03\x9f\x19\x25\x13\xf6\xbe\x21\xcd\x88\xec\x2d\x50\xd3\x80\x31\xcb\x29\x4b\x58\x7c\x18\x7a\x5d\xc3\xb1\xa4\x50\x23\x21\x57\x03\x50\x7c\x35\x03\x61\xb4\xf4\x09\xbb\xba\x6c\x68\x10\xe6\x60\x0a\xda\x0a\x9b\x59\x58\x70\x68\xe4\x56\xf4\xf3\xce\x8e\xbb\xb4\xd5\xb2\x4e\x14\x95\xd7\xef\x3b\xed\x93\x70\x4f\x5c\x4a\x07\xde\x5f\x77\xdf\xf6\x07\x83\xe9\x70\x36\xfb\x69\x4f\xe9\xa9\x58\x80\x02\xda\x5e\x22\xa1\xd1\x51\xa8\xf4\xba\xfb\xb6\x1e\xdf\xe9\xf0\x76\x3e\x1b\xdf\x7c\x9a\x4f\xfa\x0f\xbf\x37\xec\x3d\x88\xa2\x1a\x4d\xa3\x09\xfe\xdd\x6f\x96\xc3\x12\x15\xa4\x20\x13\x46\xae\x80\xad\x10\x74\xd9\xcc\x7c\x7d\x9d\x75\x72\x0d\x0f\x25\x57\x05\x24\x2c\x16\x1e\xc3\xaf\xe7\x8d\x78\x3a\x30\x3b\x96\xe0\xa1\x8f\xee\xf3\xa7\x3f\x3e\x0e\x3f\x0f\x1f\xe6\xd3\xf1\xf8\xe1\x25\xae\x4b\x8e\xad\x2a\x52\xd4\x3e\x6e\x80\xee\x74\xa8\xe0\x62\x3e\x1a\x0f\x86\xf3\xc0\x4b\xfb\x41\x7e\x73\x26\x6f\xd7\xbf\x44\x50\x72\x0a\xcb\xf6\x69\x60\x97\x1d\x53\x96\x57\x7b\xc2\xca\x68\x52\x8d\x59\x60\x89\x5e\x40\x59\xc0\xfc\x56\xad\x34\xaa\xc8\xe1\x3e\x90\x85\x3f\xec\x62\xeb\x0e\x25\xba\x86\xf7\x3c\x98\xac\x3d\xc7\x4d\xb5\x03\x1f\xa1\x78\xa0\x33\xd6\xc2\xe3\x11\x6a\x69\x93\xd6\xd9\xd9\x38\x39\x19\x8c\x09\x6e\xf9\x02\x15\x12\x82\x6f\x37\x8e\x4b\x99\xb0\xbf\x3a\xb3\x3f\x67\xf3\xfe\xe0\xfe\x6e\xd4\xf9\xbb\x21\xe6\x4a\x99\x7f\x26\x1b\xb7\x43\x2f\xb8\xaa\x8a\xdb\xf3\x5f\x13\xdc\x8e\x97\xef\xee\xfb\xb7\xc3\x97\xe4\x04\x4f\xb3\xaf\x66\xb0\x23\x68\xac\xf8\x31\xb4\xe7\xba\xfb\xb6\x3d\x3a\x0d\x00\xbd\xa9\x78\xc6\x27\x71\x9c\x22\x65\xc5\xa2\x5a\x23\x61\x3a\x9d\x06\x02\x1f\x0b\x93\xe7\x85\x46\x5a\xc5\x0b\x65\x16\x71\xce\x3d\x81\x8b\x03\x3d\x3a\x5c\x14\x64\x9c\x8f\x25\x94\xa0\x62\x8f\x69\x84\xda\x93\x2b\x72\xd0\x54\xd5\x1e\x2b\x93\xa6\xa8\xd3\x5e\x2e\xcf\xf0\x04\xe8\xb2\x3d\xba\x15\xfb\x2e\x31\xbd\xe7\xf6\x60\x78\x0f\x97\x36\xe8\xf2\x3c\xae\x7f\x14\x6a\xbe\x13\x18\x12\xca\x33\x13\x2d\xa1\x3c\xb0\xa8\xe4\xd6\xa0\x3e\x03\x85\x93\xbc\x62\x1a\x5f\x0c\x1b\x0b\x67\x2c\x4f\xeb\xa9\xfc\x88\x12\x1d\x88\xf0\x67\xbb\xb9\xbf\x0b\x81\x9b\x2d\x17\xd9\xb0\xe6\x5e\x39\xbd\xaf\xda\xfb\x9b\x48\x55\xa0\xfd\x7d\x7f\x04\x07\x5f\xda\x41\x3f\x62\x1b\x9c\xbf\xfb\x57\xb4\x73\xed\xe8\xe0\xd3\x69\x7f\x7a\x32\xe3\xd7\xb6\x4d\x52\x3b\x1c\x25\xc6\x68\x65\xc3\x92\xaa\xee\xda\xb8\x55\x2d\xd9\xa1\x7e\x07\xf5\xd0\xa7\x5e\x4d\x02\x68\x62\x69\x44\x80\xb6\x55\x66\x15\x20\x9c\x51\xae\xde\xd4\x1f\x5b\xeb\x1c\xa3\xaa\x00\x7f\xf1\xc5\x52\x4f\xe7\xfa\x8a\xad\x78\xba\xa4\xb1\xbb\x71\xc0\x09\xf6\x12\x39\x81\x9e\x6f\x48\xa6\x0d\xa5\xaf\x8b\x7e\x72\x0d\x7e\x73\x33\xe6\x1b\x70\x9c\xce\xe5\xff\x00\x00\x00\xff\xff\xd0\xf0\x5d\xe6\x02\x0d\x00\x00")

func assetsCsiNodeServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiNodeServiceYaml,
		"assets/csi-node-service.yaml",
	)
}

func assetsCsiNodeServiceYaml() (*asset, error) {
	bytes, err := assetsCsiNodeServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-node-service.yaml", size: 3330, mode: os.FileMode(420), modTime: time.Unix(1620937712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiReconcilerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x6e\xdb\x4a\x0c\xdd\xfb\x2b\x06\xba\x5e\xdc\x2e\x64\xa1\x8b\x6e\x04\x64\xe1\xc4\x6a\x61\x34\x7e\xc0\x4e\x03\x14\x45\x61\xd0\x33\x8c\x4c\x64\x5e\x98\xa1\x94\x18\x81\xff\xbd\x90\xec\xd8\x12\xdc\x2c\x3a\x2b\x89\x8f\xc3\xc3\x43\x12\x3c\x3d\x62\x88\xe4\x6c\x2e\xc0\xfb\x98\xd5\x9f\x07\xcf\x64\x55\x2e\x26\x80\xc6\xd9\x35\xf2\xc0\x20\x83\x02\x86\x7c\x20\x84\x05\x83\xb9\x90\x91\xd2\xb0\x33\xa9\x74\x31\x95\x1c\xf4\xc9\x11\x3d\x48\xcc\xc5\xf0\x6d\x3e\x9e\x15\xeb\xe5\xf8\xae\x38\x0c\xa2\x47\xd9\x24\x46\xd4\x28\xd9\x85\xe6\x5b\x08\x03\x2c\x77\xf7\xb0\x45\x1d\x8f\x06\xd1\x54\xff\x2b\x30\xa3\xf1\x1a\x18\x4f\x89\x1d\x2e\xcd\xd3\x3d\x8c\x8f\x51\x8e\x2f\x91\x91\x46\x06\xc2\x33\xb2\xd7\x20\x71\x14\x50\xed\x80\x47\xd2\x99\x4c\x05\xaa\x31\x9c\xc4\x48\x72\x91\x0c\xdf\x26\xab\xe9\x63\xb1\xda\x3c\x16\xab\xf5\x74\x31\x3f\x24\x2d\xce\x7b\x43\xed\x37\x86\x9a\x24\x8e\xa5\x74\x95\xe5\x5e\xe1\x53\x84\x0f\xe4\x02\xf1\xfe\x4e\x43\x8c\xf3\x56\xbc\xb8\x8f\x8c\x26\xb5\x4e\x61\x2a\x03\x31\x49\x78\x67\x28\x9d\x65\x20\x8b\xe1\xdc\x51\x7a\xad\xf8\xb9\x9b\x88\xb2\x6a\xb1\x9d\x65\x7c\xe5\x8b\x08\x6d\xd9\x9a\x34\x96\xa8\x72\xc1\xa1\xc2\x8e\x4b\x82\x87\x2d\x69\x62\xc2\xd8\x4d\x11\x02\x94\xca\xc5\xaf\x64\xfd\x73\xbd\x19\x4f\x66\xd3\x79\xf2\xbb\xe3\x06\xad\xdd\xcb\xf2\x1d\xb6\x88\x12\x34\x70\xbb\x36\x3d\x7c\x32\x50\x62\x57\xbc\xe9\x6c\xfc\xad\x38\xe4\x1f\x88\x79\x4e\x59\x56\x5a\x2f\x9d\x26\xb9\xcf\xc5\x58\xbf\xc0\xfe\xd2\x26\x84\xb2\x43\x34\x15\x49\x7a\xd4\xae\x11\xe6\x66\xf8\xff\xf7\x1f\xb7\xc5\x66\xbe\x98\x14\x9b\x66\xeb\x3e\x5d\x70\xff\x13\x3b\x66\x1f\xf3\x2c\x2b\x89\x77\xd5\xb6\x9d\xf2\x73\xb5\xc5\x60\x91\x31\x66\xd2\x19\x53\x59\xe2\x7d\xb6\xd5\x6e\x9b\x19\x88\x8c\x21\x6b\x46\x10\x68\x5b\xb1\x0b\x31\x53\x58\xa3\xce\x22\x95\x29\xd9\xc8\xa1\x32\x68\xb9\xed\x3a\xd3\xae\x2c\xc9\x96\x23\xa3\xfa\xcc\xea\x9b\x2f\x49\xdf\x82\xaf\x28\x53\xe3\x14\xde\x04\x94\xce\x4a\xd2\x78\x89\x40\x5b\x7f\x0d\xce\x74\xdb\x93\xce\x3e\x51\x39\x03\xbf\xc2\xa7\xfe\x7c\xae\x6f\x0f\x6d\xdd\x85\xea\xc2\x1c\x83\xfb\xe2\x74\xd0\x6a\xd0\x15\xf6\x4b\x37\xef\x89\x50\xab\xab\xc2\x27\xfb\x12\x78\x97\xb7\xfb\x3f\x6a\x06\xd0\x6c\xf3\x39\xac\x76\xba\x32\x38\x6b\xce\x20\x5e\xd3\x30\x8d\xdd\x3b\xb2\x9c\x2a\x0a\x1d\xec\xd6\x71\xc4\x1d\xbe\x35\x64\xef\x8b\x87\xcd\x6a\xb1\x78\x38\xb4\x93\xd2\xc8\x99\x77\x2a\x5e\x65\x04\xe7\xa1\x3c\xed\xdf\x2d\x29\x0a\x28\x9b\x9f\xf3\x21\x1d\xe9\x5c\x5d\xd1\x07\x3c\x76\x2e\x1e\x49\x74\x2f\xe8\x5f\x48\xf1\xde\x63\x2e\x26\x2d\x0d\x17\xf6\x8b\x70\x17\x10\x18\xff\x04\x00\x00\xff\xff\x8b\xc7\xc5\xd6\x5d\x05\x00\x00")

func assetsCsiReconcilerYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiReconcilerYaml,
		"assets/csi-reconciler.yaml",
	)
}

func assetsCsiReconcilerYaml() (*asset, error) {
	bytes, err := assetsCsiReconcilerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-reconciler.yaml", size: 1373, mode: os.FileMode(420), modTime: time.Unix(1620937712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x3f\x0b\xc2\x30\x10\x47\xf7\x7c\x8a\xdf\xe0\x9a\xa1\xfe\x59\xb2\x15\xe9\xa8\x08\x05\xf7\x33\x3d\x30\xd8\x34\x47\x2e\x16\x44\xfc\xee\x52\xcd\x26\xae\xef\xdd\x3b\x7e\xb7\x30\x0d\x0e\x3d\xe7\x39\x78\x36\x24\xe1\xcc\x59\x43\x9a\x1c\xe6\xc6\x44\x2e\x34\x50\x21\x67\x80\x89\x22\x3b\x78\x0d\x36\x5f\xa3\xf5\x49\xad\x6a\xc5\x2a\xe4\xd9\x61\xf5\x3c\xb6\x87\xae\x3f\xb5\xfb\xee\x65\x80\x91\x2e\x3c\xea\x92\x02\x24\xf2\xd3\xaa\xb0\x5f\xac\xf2\xc8\xbe\xa4\xfc\xff\x12\x90\x94\x4b\x7d\x65\xeb\x92\xe1\x1e\xe3\xe3\x43\xbe\xda\xa1\x59\x6f\xb6\xbb\x77\x00\x00\x00\xff\xff\x69\x52\x69\x54\xd0\x00\x00\x00")

func assetsCsiServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiServiceYaml,
		"assets/csi-service.yaml",
	)
}

func assetsCsiServiceYaml() (*asset, error) {
	bytes, err := assetsCsiServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-service.yaml", size: 208, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiUnitTest2Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xce\xcc\x4b\xb1\x52\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\xe5\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x28\x49\x2d\x2e\x01\x04\x00\x00\xff\xff\xff\x0b\x62\x79\x35\x00\x00\x00")

func assetsCsiUnitTest2YamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiUnitTest2Yaml,
		"assets/csi-unit-test-2.yaml",
	)
}

func assetsCsiUnitTest2Yaml() (*asset, error) {
	bytes, err := assetsCsiUnitTest2YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-unit-test-2.yaml", size: 53, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiUnitTestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x0a\xc2\x30\x10\xc7\xf7\x3c\xc5\x0d\xae\x19\xea\xc7\x92\xad\x48\x47\x45\x28\xba\x1f\x97\x03\x83\x26\x39\x72\x69\x41\xc4\x77\x97\xd8\x8e\x6e\xc7\xef\xfe\x5f\x8f\x90\xbc\x83\x6b\xd2\x49\x24\x97\xca\x7e\xe4\x32\x07\x62\x83\x12\x6e\x5c\x34\xe4\xe4\x60\xee\x4c\xe4\x8a\x1e\x2b\x3a\x03\x90\x30\xb2\x03\xd2\x60\xcb\x3d\x5a\xca\x6a\x55\x57\xac\x82\xc4\x0e\x36\xef\x73\x7f\x1a\xc6\x4b\x7f\x1c\x3e\x46\x85\xa9\xd9\x94\x9f\x4c\x35\x97\x76\x03\xa0\xc8\x9f\x8c\xb6\x41\x17\x81\x5d\x7b\xfc\x14\xe3\xeb\x47\x96\xb7\x83\x6e\xbb\xdb\x1f\xbe\x01\x00\x00\xff\xff\xf3\x48\xb7\x42\xb9\x00\x00\x00")

func assetsCsiUnitTestYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiUnitTestYaml,
		"assets/csi-unit-test.yaml",
	)
}

func assetsCsiUnitTestYaml() (*asset, error) {
	bytes, err := assetsCsiUnitTestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-unit-test.yaml", size: 185, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCsiWebhookYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4d\xcb\xdc\x30\x0c\x84\xef\xf9\x15\xe2\xbd\x3b\x4b\x6e\xc5\xf0\x1e\xda\x65\x29\x3d\x14\x4a\x29\xed\x59\xeb\x28\x89\x9a\xd8\x32\xb2\x93\xd2\x7f\x5f\xf2\xb9\x1f\x94\xbd\x59\x93\x19\xeb\x19\x62\x8c\xfc\x93\x34\xb1\x04\x0b\x58\x7b\x4e\xf3\x51\xa9\xe5\x94\x15\x33\x4b\x28\xfb\x0f\xa9\x64\x39\x4d\xd5\x95\x32\x56\x45\xcf\xa1\xb6\xf0\x75\xcc\x98\x39\xb4\xbf\xe8\xda\x89\xf4\x67\x09\x0d\xb7\xe3\x9a\x28\x3c\x65\xac\x31\xa3\x2d\x00\x30\x04\xc9\x8b\x9c\xe6\x11\xc0\x91\x66\xe3\x31\x60\x4b\x3a\xdf\xcb\xe1\x37\xb9\x6c\x1c\x9a\x46\xc5\x5b\x90\x48\x21\x75\xdc\x64\xa3\x54\x77\x38\x7b\xb5\xa7\x1c\x07\x74\x74\xba\x3b\x9b\x79\x43\xa2\x6c\x12\xe9\xc4\xa1\x35\xf3\xc5\x05\x40\x40\x4f\x16\xfe\x67\xf4\x1b\xb3\xf9\xb3\x42\x1b\xf7\x40\xbd\xa9\x0b\xa6\x01\x37\x30\x85\xbc\xf6\x5a\xc1\x01\x1c\x7e\x1a\x43\x3d\x90\x85\x73\xfb\xfe\xbe\x89\xcb\x7a\x47\xbb\xe7\x15\xc0\xbe\x77\x8b\x3c\x24\x52\x44\x47\xaf\xdb\x1f\xfe\x88\xb9\xb3\x70\xd2\xce\x1b\x97\x78\xed\x45\x66\xaa\x4c\x94\x7a\x31\x35\xc8\xc3\xa8\xf4\x4d\x06\x76\x7f\x2d\x7c\x69\x83\xe8\x1a\x5f\xe1\x36\x90\xd2\x25\x2e\xb5\xf3\xcb\x17\x1d\x07\x4a\x7b\x0b\x03\x18\xf9\xb3\xca\x18\xd3\xad\xd8\x2c\xbf\xbd\x1d\xe3\xed\xe5\x3c\x79\xa6\xea\x18\x25\x92\xde\xff\xfc\xdd\x72\xfe\x7e\xf9\xf8\xe3\x72\x48\x4a\x49\x46\x75\xf4\xe4\x8a\x52\xa7\x7f\x01\x00\x00\xff\xff\x23\x0f\x65\x1d\xa0\x02\x00\x00")

func assetsCsiWebhookYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsiWebhookYaml,
		"assets/csi-webhook.yaml",
	)
}

func assetsCsiWebhookYaml() (*asset, error) {
	bytes, err := assetsCsiWebhookYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi-webhook.yaml", size: 672, mode: os.FileMode(420), modTime: time.Unix(1615321640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsDatasetPvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xb1\x4e\x03\x41\x0c\x44\xfb\xfd\x0a\x2b\xfd\x1d\xa2\xa0\xd9\x36\x05\x55\x00\x51\xa4\x37\xde\x11\x59\xdd\xae\x7d\xac\x7d\x91\xf2\xf7\xe8\x50\x44\x91\xf2\x59\xcf\x33\xc3\x6b\x3d\x63\x78\x35\xcd\x74\x7d\x4e\x4b\xd5\x92\xe9\x63\xbf\x78\x40\xe3\x6c\x6d\xeb\x38\x36\xae\x3d\x75\x04\x17\x0e\xce\x89\x48\xb9\x23\x93\x78\x9d\xc6\xa5\x4f\x62\x3e\xad\x57\x49\x44\xac\x6a\xc1\x51\x4d\x7d\xd7\x68\x57\xe6\xce\x63\x41\xac\x8d\x05\xf3\x40\xb9\x70\xcc\x62\xfd\xe9\x6b\x93\x05\xe1\x99\x0e\xdc\xda\x21\xf9\x0a\xd9\x7f\x58\x04\xee\x27\x2b\xf8\x8b\x98\xe8\x13\x5c\xde\xb5\xdd\x4e\xac\xb7\x44\x34\xe0\xb6\x0d\xc1\xbd\x60\xe0\x67\x83\xc7\x9d\x88\x3c\x6c\xf0\x37\x32\xbd\xbc\xd6\xf4\x8f\xc7\xc6\xee\x6f\x8f\xa3\x7f\x03\x00\x00\xff\xff\xae\x31\x90\x10\xfd\x00\x00\x00")

func assetsDatasetPvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsDatasetPvcYaml,
		"assets/dataset-pvc.yaml",
	)
}

func assetsDatasetPvcYaml() (*asset, error) {
	bytes, err := assetsDatasetPvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/dataset-pvc.yaml", size: 253, mode: os.FileMode(420), modTime: time.Unix(1620937712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\xb1\x4a\x04\x41\x0c\x06\xe0\x7e\x9e\x22\x85\xed\xac\xd8\xc9\x74\xeb\x71\x58\x29\x72\x07\xf6\xd9\x6c\xf4\xe2\xed\x4e\x96\x64\xe6\x0a\xc5\x77\x97\x61\xc5\xc6\x45\xec\x86\x21\x7c\xff\x9f\x9c\x25\x8f\x09\x76\x53\xf5\xc2\x76\xd0\x89\xef\x24\x8f\x92\x5f\x03\x2e\xf2\xcc\xe6\xa2\x39\x81\x0d\x48\x1d\xd6\x72\x52\x93\x77\x2c\xa2\xb9\x3b\xdf\x7a\x27\x7a\x7d\xb9\x09\x33\x17\x1c\xb1\x60\x0a\x00\x19\x67\x4e\x40\x2e\xd1\x4e\x73\x24\xf5\xd8\xde\xb4\xea\xd1\x74\xe2\x38\x7c\xfb\xeb\xb0\x2f\x48\x9c\xe0\xea\xe3\xb1\x7f\xd8\x1f\x9f\xfa\xdd\xfe\x33\x78\x1d\xde\x98\x8a\x37\x30\xc2\x5a\xf0\xc8\x76\x11\xe2\x9e\x48\x6b\x2e\x01\x60\x23\xeb\xe7\x77\x0b\x6d\xd9\x07\x7e\x69\xe6\xaf\x95\xff\x55\x3c\x00\xe0\x22\xf7\xa6\x75\xf9\xe3\x20\x5f\x01\x00\x00\xff\xff\xe9\xe7\x0b\xcc\x4f\x01\x00\x00")

func assetsRbacCsiClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiClusterRoleBindingYaml,
		"assets/rbac-csi-cluster-role-binding.yaml",
	)
}

func assetsRbacCsiClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacCsiClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-cluster-role-binding.yaml", size: 335, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xcf\x8e\xd4\x3c\x10\xc4\xef\x79\x0a\x2b\xfa\x8e\x5f\xb2\xe2\x86\x72\x5b\xad\x56\x9c\x58\x21\x90\xb8\x20\x0e\xbd\x9d\x66\x6c\x8d\x63\x5b\xdd\xed\xf0\x4f\xbc\x3b\x72\x12\x10\x33\xe3\x59\x86\x81\x53\x5a\x56\xe9\x57\x55\x6e\x67\xef\xc2\x38\x98\x3b\x9f\x45\x89\x5f\x47\x4f\x0d\x24\xf7\x96\x58\x5c\x0c\x83\xe1\x47\xc0\x1e\xb2\xda\xc8\xee\x0b\xa8\x8b\xa1\xdf\x3f\x97\xde\xc5\x9b\xf9\x59\x33\x91\xc2\x08\x0a\x43\x63\x4c\x80\x89\x06\x83\xe2\x3a\xb6\x53\x87\x51\xba\x32\xe3\x8a\xed\xb8\x70\x57\x91\x24\x40\x1a\xcc\x7f\x5f\x1f\x6e\x5f\xde\xbf\x79\x75\x7b\x77\xff\xad\xe1\xec\x49\x0a\xa5\x33\x90\xdc\x0b\x8e\x39\xc9\x60\xde\xb5\xed\xfb\xc6\x18\x63\x98\x24\x66\x46\x5a\xce\x52\x89\x26\x4a\x41\xe7\xe8\xf3\x44\xb2\x89\x66\xe2\xc7\x45\xb0\x23\x6d\xff\x37\xad\x77\xb2\x7c\x3f\x82\xa2\x2d\x43\xfa\x31\x20\x13\x28\x95\x29\xa7\x71\x9b\x46\xf2\xa4\xb4\xa0\xae\xc8\x80\x1e\xdc\x74\x71\x90\xcd\xb5\xe2\x25\x1a\x19\x76\xb4\x5d\x71\xcd\x79\x53\xa0\x07\x91\x0b\xab\x5f\xd8\x29\xc4\xf1\x7a\xe0\xef\x83\xa3\xb8\xbf\x72\xa8\x31\x69\xa6\xa0\x27\xc4\x93\xfb\xae\xed\x3b\x5d\xdf\x64\x5d\x39\xa8\x02\xda\xa9\x16\xe0\xe9\x07\x78\xea\x69\x5a\x21\xcc\xec\xf4\x73\x1f\x13\x05\xb1\xee\x83\x16\x6f\x73\x68\xfe\x50\x7e\x9e\x45\x9e\xd8\xcd\xce\xd3\x8e\xc6\x63\xcd\x21\x0e\x63\x50\xfa\xa4\x18\x83\x28\x83\x2b\x51\xcd\x61\x56\xd3\x66\xa1\xf5\xf0\x38\x53\x1d\x9d\xe2\x58\x81\x1c\x35\x5e\x8b\xfe\x21\xf5\x46\x14\x34\xd7\x12\xae\x4b\xab\xe0\xda\x09\x78\x4f\x9a\x3c\x20\xf5\x4c\xa3\x05\xed\x31\x4e\xb5\xa5\xfd\xa2\x1c\xd9\xcd\xc4\x96\xc0\xab\x45\x4b\xb8\x3f\xb7\xc0\x9f\x8b\x5b\x7a\xd5\xda\x9c\xf1\xaf\x76\x7c\x32\xc1\xd9\xf2\x5b\x94\x7f\x7e\x07\xa0\x20\x74\xf6\xe9\x1e\x37\xff\x1e\x00\x00\xff\xff\x0a\x55\xee\xd1\x24\x06\x00\x00")

func assetsRbacCsiClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiClusterRoleYaml,
		"assets/rbac-csi-cluster-role.yaml",
	)
}

func assetsRbacCsiClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRbacCsiClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-cluster-role.yaml", size: 1572, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xbd\x4a\xc5\x40\x10\x85\xfb\x7d\x8a\x29\x6c\x37\x62\x27\xdb\x45\x09\x56\x8a\x24\x60\x3f\x99\x8c\x66\x4c\xb2\xb3\xec\x4f\x0a\xc5\x77\x97\x18\xb9\xb7\x09\xe9\x86\xe1\xf0\x7d\x87\x83\x41\xde\x38\x26\x51\xef\x20\xf6\x48\x15\x96\x3c\x6a\x94\x2f\xcc\xa2\xbe\x9a\xee\x53\x25\x7a\xbb\xde\x99\x49\xfc\xe0\xa0\xd5\x99\x1f\xc4\x0f\xe2\x3f\xcc\xc2\x19\x07\xcc\xe8\x0c\x80\xc7\x85\x1d\x50\x12\x1b\xc7\xc5\x92\x26\xfb\x77\xeb\xcc\xb6\xff\x8f\xef\xa1\x14\x90\xd8\xc1\xcd\xf7\x4b\xfd\xdc\x74\xaf\xf5\x63\xf3\x63\x52\xe9\x3f\x99\x72\xda\x40\x16\x76\x51\xc7\x71\x15\xe2\x9a\x48\x8b\xcf\x06\xe0\xc0\x71\xf9\x1e\x41\x37\x77\xcb\xef\x1b\xf3\x5a\xfd\xb4\xa9\x01\xc0\x20\x4f\x51\x4b\x38\xd9\xe2\x37\x00\x00\xff\xff\x04\x9e\x6b\x4c\x31\x01\x00\x00")

func assetsRbacCsiRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiRoleBindingYaml,
		"assets/rbac-csi-role-binding.yaml",
	)
}

func assetsRbacCsiRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacCsiRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-role-binding.yaml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacCsiRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\x31\x4b\x04\x41\x0c\x85\xfb\xf9\x15\x61\xb1\xdd\x11\x3b\x99\xee\x90\xc3\x4a\x11\x05\x1b\xb9\x22\x97\x0d\x6e\xd8\x9d\xcd\x90\xcc\x6e\xa1\xf8\xdf\xe5\x46\xaf\x38\xae\x0b\xdf\xfb\xf2\x1e\x16\x79\x67\x73\xd1\x25\x81\x1d\x91\x22\xae\x75\x54\x93\x2f\xac\xa2\x4b\x9c\xee\x3d\x8a\xde\x6e\x77\x61\x92\x65\x48\xf0\xaa\x33\x87\xcc\x15\x07\xac\x98\x02\xc0\x82\x99\x13\x90\x4b\x6f\x63\xee\x49\xbd\x6f\xf7\x49\xfb\x0b\xbd\x20\x71\x82\x9b\xef\xe7\xdd\xd3\xfe\xed\x65\xf7\xb0\xff\x09\xb6\xce\xec\xa7\xef\x1e\xb0\xc8\xa3\xe9\x5a\x3c\xc1\x47\xd7\x1d\x02\x00\x80\xb1\xeb\x6a\xc4\x8d\x39\x93\x71\xf5\xff\x68\x63\x3b\x36\xfc\xc9\xb5\xa1\xcb\x06\xe8\x32\xda\xc4\xb5\xcc\x48\x1c\x8d\x87\x11\x6b\x24\xcd\x1d\x5c\x37\x5f\xb8\xe4\x32\x98\x6c\x6c\x7e\x56\xcf\x4b\xd0\xa6\xe0\xf0\x1b\x00\x00\xff\xff\x10\x7f\x44\xe3\x29\x01\x00\x00")

func assetsRbacCsiRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacCsiRoleYaml,
		"assets/rbac-csi-role.yaml",
	)
}

func assetsRbacCsiRoleYaml() (*asset, error) {
	bytes, err := assetsRbacCsiRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-csi-role.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1620833006, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmDatasetClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\x4e\x03\x31\x0c\x40\xf7\x7c\x85\x07\xd6\x1c\x62\x43\xd9\x8e\xaa\x62\x02\xa1\x56\x62\xf7\xe5\x5c\x30\x97\x8b\x23\xc7\xe9\x00\xe2\xdf\x51\xd4\x22\x06\x10\x52\xd7\xc4\xef\xf9\x19\x0b\x3f\x93\x56\x96\x1c\x40\x27\x8c\x03\x36\x7b\x15\xe5\x77\x34\x96\x3c\x2c\xb7\x75\x60\xb9\x3e\xde\xb8\x85\xf3\x1c\x60\x93\x5a\x35\xd2\x9d\x24\xba\xe3\x3c\x73\x7e\x71\x2b\x19\xce\x68\x18\x1c\x40\xc6\x95\x02\x48\x5a\xfd\x8a\xba\x90\x95\x84\x91\x7c\xff\xad\x64\x3e\x9e\x60\xaf\x92\xc8\x4f\x67\xfc\x04\xd5\x82\x91\x02\x5c\x7d\x3c\x8e\x0f\xdb\xfd\xd3\xb8\xd9\x7e\xba\x3e\xb6\xa3\x43\xf7\x62\xe1\x7b\x95\x56\xfe\x69\x74\x00\xbf\x12\x2f\x2a\x72\xb5\x4d\x6f\x14\xad\xf6\x85\xfe\x2c\xdb\x93\x1e\x39\xd2\x18\xa3\xb4\x6c\x0e\xe0\xdb\x38\xd3\x01\x5b\xfa\x79\xf9\xe3\x80\xaf\x00\x00\x00\xff\xff\x0a\xd3\xe7\x6d\x5b\x01\x00\x00")

func assetsRbacOlmDatasetClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmDatasetClusterRoleBindingYaml,
		"assets/rbac-olm-dataset-cluster-role-binding.yaml",
	)
}

func assetsRbacOlmDatasetClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacOlmDatasetClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-dataset-cluster-role-binding.yaml", size: 347, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmDatasetClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xcd\x6e\xdb\x4c\x0c\xbc\xfb\x29\x84\xe0\xbb\xda\xc1\x77\x2b\x7c\x0b\x82\xa0\x97\xb6\x28\x52\xb4\x77\x9a\xa2\x2d\xd6\xfb\x07\x92\xab\xf4\x07\x7d\xf7\x42\x96\x13\x2b\xad\xd7\x95\x51\xc7\x4d\x6e\x36\x97\xdc\x19\xce\x72\x57\x03\x89\x3f\x91\x28\xc7\x30\xaf\x64\x01\x38\x83\x6c\x4d\x14\xfe\x06\xc6\x31\xcc\xd6\xaf\x74\xc6\xf1\xb2\xfd\x7f\xb2\xe6\x50\xcf\xab\x6b\x97\xd5\x48\x6e\xa3\xa3\x89\x27\x83\x1a\x0c\xe6\x93\xaa\x0a\xe0\x69\x5e\x45\xe7\xa7\x1e\x64\x4d\x96\x1c\x20\x4d\xbb\x55\x25\x9b\x62\x5f\x35\x95\xae\xac\x4f\xd6\x04\x48\xf3\xea\xbf\xef\xef\xae\xde\xde\x7c\x78\x7f\x75\x7d\xf3\x63\x22\xd9\x91\x76\xbb\x4d\x2b\x48\xfc\x5a\x62\x4e\x9b\xbf\x9b\x40\xb6\x86\x82\x31\x0e\x79\x6d\xd6\x84\x34\x66\x41\xda\xa6\x76\xc9\x16\xd7\x14\x84\x5a\xa6\x3b\xdd\x04\x5b\x92\xc5\x60\x1d\x85\xc0\x68\x1f\xd0\x3d\xd4\xaf\x0a\x94\x90\x34\x2f\x3e\x13\x1a\x20\x92\xea\x38\xc4\x10\xc3\xed\x76\xa3\x8f\xb7\x6f\x06\x39\x97\x9e\x4c\x18\xf7\xd6\xaf\xc8\x8a\x74\x6b\xcf\xda\x1d\xa0\xd0\x8a\xd5\x64\x0c\x6d\x9f\x0d\x8c\xc3\xea\x8e\x16\x4d\x8c\x6b\x8c\x61\xc9\xab\xdc\x97\x1e\xe6\x3f\xa4\xd3\xff\x76\xac\xbb\x3f\x39\xd5\xc3\xbc\x3b\x30\x6c\x8a\xc4\x53\xd2\x12\xc1\x1a\xc8\xc7\xa0\x64\xba\x93\xda\xc0\x68\x99\xdd\x43\xf0\x0c\x14\x7b\x61\x66\x31\x51\xd0\x86\x97\x76\x40\x52\x0e\x4b\x01\x35\xc9\x68\x59\xe8\xd8\x43\xbc\xb8\x28\xed\xdb\x53\xf0\x90\x76\x4a\x3c\xdc\x9f\x41\x28\xd6\x87\x30\xf7\xc8\x70\xb0\xef\x32\x1d\x6a\x29\x8c\xd2\xff\x11\x58\xda\x82\x1d\x7f\x02\x65\x26\xa9\x7b\xb6\xd4\x28\x58\x1b\x5d\xf6\x84\x0e\xd8\x8f\x61\x56\x93\xa3\x53\x0f\xca\x78\x9a\xa7\x64\xf8\x24\xb2\xc6\xfa\xb8\x41\x7a\x4c\xe2\x2f\x50\x2f\xbb\x1b\x9e\xf7\x82\x3f\xb4\x76\xe4\xb6\x4a\x28\x85\xe7\xe2\xd4\x17\x43\x49\x5a\x46\x02\xc4\x98\xc3\xf0\xd9\xea\xe3\xff\x6a\x30\x07\x9f\xe3\x99\x50\xdd\x80\xcd\x30\xfa\xe2\x77\x61\x97\x8d\xca\xb5\x70\x4b\xf2\x3c\x06\xf6\x04\x7d\x1c\x98\xaf\x21\xe1\x02\xc7\xd3\xb2\xda\x3a\xa3\x17\xae\xed\x7d\x17\xcf\x4a\xd9\xcd\x61\x37\x04\xce\x1a\x6c\x08\xd7\x2f\x5d\xe3\xdf\xfa\x79\x02\xb5\x8b\xce\xbf\xe8\x4a\x7a\x47\xdf\x19\xfa\x05\x87\x9a\xc3\x4a\xf7\xad\xed\x82\x7b\x33\x77\x29\x67\xf0\x72\x4a\x98\x85\xed\xeb\x28\x37\x77\x9f\x8c\x31\x18\x7d\x31\x8c\xa1\x73\xd6\x5c\xb0\x3e\x59\x8b\xca\xaa\x45\x81\x15\xfd\x49\xce\xc7\x8f\xed\xa0\x10\x1d\xa8\x9e\x51\xa4\xb1\x74\x4f\x6c\x38\xc7\xe1\xf6\x0e\x0a\xcc\x00\x1b\x5f\xf2\xa1\xc7\x18\x95\x9f\x01\x00\x00\xff\xff\xf2\xa1\xd4\xd8\xfe\x0e\x00\x00")

func assetsRbacOlmDatasetClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmDatasetClusterRoleYaml,
		"assets/rbac-olm-dataset-cluster-role.yaml",
	)
}

func assetsRbacOlmDatasetClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRbacOlmDatasetClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-dataset-cluster-role.yaml", size: 3838, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmLeaderRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\xbb\x4e\x2b\x31\x10\x06\xe0\xde\x4f\x31\xc5\x69\xbd\x47\x74\xc8\xdd\x82\x22\x2a\x10\x4a\x24\xfa\x59\xfb\x0f\x0c\xeb\xf5\x58\xbe\xa4\x00\xf1\xee\xc8\x22\x28\x0d\xa2\xa0\x9d\xcb\x37\xff\x70\x96\x27\x94\x2a\x9a\x1c\x95\x85\xfd\xc4\xbd\xbd\x68\x91\x37\x6e\xa2\x69\x5a\xaf\xeb\x24\xfa\xff\x74\x65\x56\x49\xc1\xd1\x5e\x23\x6e\x24\x05\x49\xcf\x66\x43\xe3\xc0\x8d\x9d\x21\x4a\xbc\xc1\x91\xc6\xcd\x6e\x5c\x56\xb4\x1c\xd9\xc3\x8e\x6e\x45\xb3\x11\x1c\x50\x2c\x22\xfc\x50\x6d\xd1\x08\xbb\x9c\x99\xaf\xe5\x9a\xd9\xc3\xd1\xbf\xf7\x87\xf9\x7e\x77\x78\x9c\x6f\x77\x1f\x66\x8c\xed\x71\x1c\x3e\x67\xb9\x2b\xda\xf3\x2f\x21\x0d\xd1\x25\xe3\x9f\x22\x99\xda\x97\x57\xf8\x56\xc7\x45\x7b\xd6\x0e\x28\x27\xf1\x98\xbd\xd7\x9e\x9a\x21\xfa\x96\x03\x8e\xdc\xe3\xa5\xf2\xc3\x07\x9f\x01\x00\x00\xff\xff\x18\xab\xa1\x74\x5d\x01\x00\x00")

func assetsRbacOlmLeaderRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmLeaderRoleBindingYaml,
		"assets/rbac-olm-leader-role-binding.yaml",
	)
}

func assetsRbacOlmLeaderRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRbacOlmLeaderRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-leader-role-binding.yaml", size: 349, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacOlmLeaderRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x4f\x4b\x03\x31\x10\xc5\xef\xfb\x29\x42\xf1\x9a\x2d\xde\x64\x6f\x45\x8a\x27\x45\x14\xbc\x4f\xb3\xcf\x36\x6c\xfe\x31\x99\xac\xa0\xf8\xdd\x25\x11\xda\x55\x14\xb1\x39\xcd\xcb\xcb\xfc\xde\x0b\x25\xfb\x04\xce\x36\x86\x41\xf1\x8e\x4c\x4f\x45\x0e\x91\xed\x2b\x89\x8d\xa1\x9f\xae\x72\x6f\xe3\x7a\xbe\xec\x26\x1b\xc6\x41\x3d\x44\x87\xce\x43\x68\x24\xa1\xa1\x53\x2a\x90\xc7\xa0\xa2\xf3\xda\x13\x4f\x90\xe4\xc8\x40\x57\x37\x43\xb4\x03\x8d\x60\x0d\x07\x53\x71\x9a\xeb\xfa\xe7\x52\x4e\x64\x30\xa8\x8b\xb7\xbb\xcd\xed\xf6\xf1\x7e\x73\xbd\x7d\xef\xb8\x38\xe4\x4a\xd5\x8a\x92\xbd\xe1\x58\x52\x93\xf5\x68\xb5\x5a\xb5\x91\x91\x63\x61\x83\x85\x63\x62\x78\xb6\x7b\x4f\x29\xb7\xab\x19\xbc\x5b\xb8\x7b\xc8\x71\x76\x36\x9f\xc4\x0b\x89\x39\x9c\x20\x0c\x12\x1c\x65\x49\xe3\x52\xa6\x2f\x6f\x47\x38\x34\xf3\xec\xa2\xeb\x2c\x24\xe5\xcf\xbe\xbf\xb4\xf8\x67\x2c\x66\x04\xf9\x31\xeb\xdb\xa7\x1b\xff\x23\x00\x00\xff\xff\x5f\x97\xd0\xe4\x13\x02\x00\x00")

func assetsRbacOlmLeaderRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacOlmLeaderRoleYaml,
		"assets/rbac-olm-leader-role.yaml",
	)
}

func assetsRbacOlmLeaderRoleYaml() (*asset, error) {
	bytes, err := assetsRbacOlmLeaderRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-olm-leader-role.yaml", size: 531, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRbacServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x2a\xcb\x4c\x4e\x75\x4c\x4e\xce\x2f\xcd\x2b\xe1\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x48\x2e\xce\xd4\x2d\xca\xc8\xd5\x4d\xce\x2f\x86\x8a\x15\x17\x24\x26\xa7\x5a\x29\xa8\x54\xfb\x39\xfa\xba\x06\x07\x38\x3a\xbb\xd6\x02\x02\x00\x00\xff\xff\x14\xe2\x78\xcd\x5b\x00\x00\x00")

func assetsRbacServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRbacServiceAccountYaml,
		"assets/rbac-service-account.yaml",
	)
}

func assetsRbacServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRbacServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rbac-service-account.yaml", size: 91, mode: os.FileMode(420), modTime: time.Unix(1615321641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStorageClassYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcb\x31\xaa\xc3\x30\x0c\x06\xe0\xdd\xa7\xf0\x05\xe2\x47\xb6\x87\xd7\x1e\xa1\xd0\xfd\xaf\x2d\x1a\xe1\xc8\x32\x92\xc8\xf9\x4b\xdb\xf9\xe3\x1b\x3c\x7b\xcd\xf7\x50\xc3\x8b\x6e\x27\xdc\x13\x16\x3f\xc8\x9c\x75\xd6\xec\x3f\x28\xe3\xdf\x0b\xeb\xdf\xb5\x3f\x29\xb0\x27\xa1\x40\x47\xa0\xa6\x9c\x27\x84\x6a\x6e\xce\x9b\x1d\xb2\x35\xf5\xb4\x4c\x2f\xfe\x7c\xb2\x2f\x14\x81\x0d\x8a\x75\xa2\x51\x31\xea\x07\xa2\x34\x95\x77\x00\x00\x00\xff\xff\xcb\x80\x4f\x75\x7b\x00\x00\x00")

func assetsStorageClassYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsStorageClassYaml,
		"assets/storage-class.yaml",
	)
}

func assetsStorageClassYaml() (*asset, error) {
	bytes, err := assetsStorageClassYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/storage-class.yaml", size: 123, mode: os.FileMode(420), modTime: time.Unix(1620937712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/csi-controller-service.yaml":                assetsCsiControllerServiceYaml,
	"assets/csi-driver-env.yaml":                        assetsCsiDriverEnvYaml,
	"assets/csi-driver.yaml":                            assetsCsiDriverYaml,
	"assets/csi-node-service.yaml":                      assetsCsiNodeServiceYaml,
	"assets/csi-reconciler.yaml":                        assetsCsiReconcilerYaml,
	"assets/csi-service.yaml":                           assetsCsiServiceYaml,
	"assets/csi-unit-test-2.yaml":                       assetsCsiUnitTest2Yaml,
	"assets/csi-unit-test.yaml":                         assetsCsiUnitTestYaml,
	"assets/csi-webhook.yaml":                           assetsCsiWebhookYaml,
	"assets/dataset-pvc.yaml":                           assetsDatasetPvcYaml,
	"assets/rbac-csi-cluster-role-binding.yaml":         assetsRbacCsiClusterRoleBindingYaml,
	"assets/rbac-csi-cluster-role.yaml":                 assetsRbacCsiClusterRoleYaml,
	"assets/rbac-csi-role-binding.yaml":                 assetsRbacCsiRoleBindingYaml,
	"assets/rbac-csi-role.yaml":                         assetsRbacCsiRoleYaml,
	"assets/rbac-olm-dataset-cluster-role-binding.yaml": assetsRbacOlmDatasetClusterRoleBindingYaml,
	"assets/rbac-olm-dataset-cluster-role.yaml":         assetsRbacOlmDatasetClusterRoleYaml,
	"assets/rbac-olm-leader-role-binding.yaml":          assetsRbacOlmLeaderRoleBindingYaml,
	"assets/rbac-olm-leader-role.yaml":                  assetsRbacOlmLeaderRoleYaml,
	"assets/rbac-service-account.yaml":                  assetsRbacServiceAccountYaml,
	"assets/storage-class.yaml":                         assetsStorageClassYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"csi-controller-service.yaml":                &bintree{assetsCsiControllerServiceYaml, map[string]*bintree{}},
		"csi-driver-env.yaml":                        &bintree{assetsCsiDriverEnvYaml, map[string]*bintree{}},
		"csi-driver.yaml":                            &bintree{assetsCsiDriverYaml, map[string]*bintree{}},
		"csi-node-service.yaml":                      &bintree{assetsCsiNodeServiceYaml, map[string]*bintree{}},
		"csi-reconciler.yaml":                        &bintree{assetsCsiReconcilerYaml, map[string]*bintree{}},
		"csi-service.yaml":                           &bintree{assetsCsiServiceYaml, map[string]*bintree{}},
		"csi-unit-test-2.yaml":                       &bintree{assetsCsiUnitTest2Yaml, map[string]*bintree{}},
		"csi-unit-test.yaml":                         &bintree{assetsCsiUnitTestYaml, map[string]*bintree{}},
		"csi-webhook.yaml":                           &bintree{assetsCsiWebhookYaml, map[string]*bintree{}},
		"dataset-pvc.yaml":                           &bintree{assetsDatasetPvcYaml, map[string]*bintree{}},
		"rbac-csi-cluster-role-binding.yaml":         &bintree{assetsRbacCsiClusterRoleBindingYaml, map[string]*bintree{}},
		"rbac-csi-cluster-role.yaml":                 &bintree{assetsRbacCsiClusterRoleYaml, map[string]*bintree{}},
		"rbac-csi-role-binding.yaml":                 &bintree{assetsRbacCsiRoleBindingYaml, map[string]*bintree{}},
		"rbac-csi-role.yaml":                         &bintree{assetsRbacCsiRoleYaml, map[string]*bintree{}},
		"rbac-olm-dataset-cluster-role-binding.yaml": &bintree{assetsRbacOlmDatasetClusterRoleBindingYaml, map[string]*bintree{}},
		"rbac-olm-dataset-cluster-role.yaml":         &bintree{assetsRbacOlmDatasetClusterRoleYaml, map[string]*bintree{}},
		"rbac-olm-leader-role-binding.yaml":          &bintree{assetsRbacOlmLeaderRoleBindingYaml, map[string]*bintree{}},
		"rbac-olm-leader-role.yaml":                  &bintree{assetsRbacOlmLeaderRoleYaml, map[string]*bintree{}},
		"rbac-service-account.yaml":                  &bintree{assetsRbacServiceAccountYaml, map[string]*bintree{}},
		"storage-class.yaml":                         &bintree{assetsStorageClassYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
